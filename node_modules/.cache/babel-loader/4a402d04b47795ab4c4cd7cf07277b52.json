{"ast":null,"code":"var _jsxFileName = \"/Users/hyerm2/Desktop/2021SWFestival/HisStudy/src/Bbs.js\",\n    _s = $RefreshSig$();\n\n// import withRoot from './withRoot';\n// // --- Post bootstrap -----\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import clsx from 'clsx';\n// import { lighten, makeStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TablePagination from '@material-ui/core/TablePagination';\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import Paper from '@material-ui/core/Paper';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import IconButton from '@material-ui/core/IconButton';\n// import Tooltip from '@material-ui/core/Tooltip';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Switch from '@material-ui/core/Switch';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import FilterListIcon from '@material-ui/icons/FilterList';\n// import Link from '@material-ui/core/Link';\n// import AddBoxIcon from '@material-ui/icons/AddBox';\n// import AppFooter from './views/AppFooter';\n// import AppAppBar from './views/AppAppBar';\n// import Button from '@material-ui/core/Button';\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n// const rows = [\n//   createData('Cupcake', '이동은', 3.7, 4),\n//   createData('Donut', '이혜림', 25.0, 4),\n//   createData('Eclair', '강하림', 16.0, 6),\n//   createData('Frozen yoghurt', '박성희', 6.0, 4),\n//   createData('Gingerbread', '이효주', 16.0, 3),\n//   createData('Honeycomb', '박지후', 3.2, 6),\n//   createData('Ice cream sandwich', '양태균', 9.0, 4),\n//   createData('Jelly Bean', '송하영', 0.0, 0),\n//   createData('KitKat', 'bryan', 26.0, 7),\n//   createData('Lollipop', '이주영', 0.2, 0),\n//   createData('Marshmallow', '남종운', 0, 2),\n//   createData('Nougat', '박세빈', 19.0, 37),\n//   createData('Oreo', '최지훈', 18.0, 4),\n// ];\n// function descendingComparator(a, b, orderBy) {\n//   if (b[orderBy] < a[orderBy]) {\n//     return -1;\n//   }\n//   if (b[orderBy] > a[orderBy]) {\n//     return 1;\n//   }\n//   return 0;\n// }\n// function getComparator(order, orderBy) {\n//   return order === 'desc'\n//     ? (a, b) => descendingComparator(a, b, orderBy)\n//     : (a, b) => -descendingComparator(a, b, orderBy);\n// }\n// function stableSort(array, comparator) {\n//   const stabilizedThis = array.map((el, index) => [el, index]);\n//   stabilizedThis.sort((a, b) => {\n//     const order = comparator(a[0], b[0]);\n//     if (order !== 0) return order;\n//     return a[1] - b[1];\n//   });\n//   return stabilizedThis.map((el) => el[0]);\n// }\n// const headCells = [\n//   { id: 'name', numeric: false, disablePadding: true, label: '제목' },\n//   { id: 'calories', numeric: true, disablePadding: false, label: '게시자' },\n//   { id: 'fat', numeric: true, disablePadding: false, label: '날짜' },\n//   { id: 'protein', numeric: true, disablePadding: false, label: '조회수' },\n// ];\n// function EnhancedTableHead(props) {\n//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n//   const createSortHandler = (property) => (event) => {\n//     onRequestSort(event, property);\n//   };\n//   return (\n//     <TableHead>\n//       <TableRow>\n//         <TableCell padding=\"checkbox\">\n//           <Checkbox\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\n//             checked={rowCount > 0 && numSelected === rowCount}\n//             onChange={onSelectAllClick}\n//             inputProps={{ 'aria-label': 'select all desserts' }}\n//           />\n//         </TableCell>\n//         {headCells.map((headCell) => (\n//           <TableCell\n//             key={headCell.id}\n//             align={headCell.numeric ? 'right' : 'left'}\n//             padding={headCell.disablePadding ? 'none' : 'normal'}\n//             sortDirection={orderBy === headCell.id ? order : false}\n//           >\n//             <TableSortLabel\n//               active={orderBy === headCell.id}\n//               direction={orderBy === headCell.id ? order : 'asc'}\n//               onClick={createSortHandler(headCell.id)}\n//             >\n//               {headCell.label}\n//               {orderBy === headCell.id ? (\n//                 <span className={classes.visuallyHidden}>\n//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n//                 </span>\n//               ) : null}\n//             </TableSortLabel>\n//           </TableCell>\n//         ))}\n//       </TableRow>\n//     </TableHead>\n//   );\n// }\n// EnhancedTableHead.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   numSelected: PropTypes.number.isRequired,\n//   onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n//   orderBy: PropTypes.string.isRequired,\n//   rowCount: PropTypes.number.isRequired,\n// };\n// const useToolbarStyles = makeStyles((theme) => ({\n//   root: {\n//     paddingLeft: theme.spacing(2),\n//     paddingRight: theme.spacing(1),\n//   },\n//   highlight:\n//     theme.palette.type === 'light'\n//       ? {\n//           color: theme.palette.secondary.main,\n//           backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n//         }\n//       : {\n//           color: theme.palette.text.primary,\n//           backgroundColor: theme.palette.secondary.dark,\n//         },\n//   title: {\n//     flex: '1 1 100%',\n//   },\n// }));\n// const EnhancedTableToolbar = (props) => {\n//   const classes = useToolbarStyles();\n//   const { numSelected } = props;\n//   return (\n//     <Toolbar\n//       className={clsx(classes.root, {\n//         [classes.highlight]: numSelected > 0,\n//       })}\n//     >\n//       {numSelected > 0 ? (\n//         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n//           {numSelected} selected\n//         </Typography>\n//       ) : (\n//         <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n//          게시판\n//         </Typography>\n//       )}\n//       {numSelected > 0 ? (\n//         <Tooltip title=\"글 삭제하기\">\n//           <IconButton aria-label=\"delete\">\n//             <DeleteIcon />\n//           </IconButton>\n//         </Tooltip>\n//       ) : (\n//         <Tooltip title=\"새 게시글 쓰기\">\n//            <Button href= '/bbs2'>\n//            <IconButton aria-label=\"filter list\">\n//             <AddBoxIcon />\n//           </IconButton>\n//            </Button>\n//         </Tooltip>\n//       )}\n//     </Toolbar>\n//   );\n// };\n// EnhancedTableToolbar.propTypes = {\n//   numSelected: PropTypes.number.isRequired,\n// };\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//   },\n//   paper: {\n//     width: '100%',\n//     marginBottom: theme.spacing(2),\n//   },\n//   table: {\n//     minWidth: 750,\n//   },\n//   visuallyHidden: {\n//     border: 0,\n//     clip: 'rect(0 0 0 0)',\n//     height: 1,\n//     margin: -1,\n//     overflow: 'hidden',\n//     padding: 0,\n//     position: 'absolute',\n//     top: 20,\n//     width: 1,\n//   },\n// }));\n// function Bbs() {\n//   const classes = useStyles();\n//   const [order, setOrder] = React.useState('asc');\n//   const [orderBy, setOrderBy] = React.useState('calories');\n//   const [selected, setSelected] = React.useState([]);\n//   const [page, setPage] = React.useState(0);\n//   const [dense, setDense] = React.useState(false);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n//   const handleRequestSort = (event, property) => {\n//     const isAsc = orderBy === property && order === 'asc';\n//     setOrder(isAsc ? 'desc' : 'asc');\n//     setOrderBy(property);\n//   };\n//   const handleSelectAllClick = (event) => {\n//     if (event.target.checked) {\n//       const newSelecteds = rows.map((n) => n.name);\n//       setSelected(newSelecteds);\n//       return;\n//     }\n//     setSelected([]);\n//   };\n//   const handleClick = (event, name) => {\n//     const selectedIndex = selected.indexOf(name);\n//     let newSelected = [];\n//     if (selectedIndex === -1) {\n//       newSelected = newSelected.concat(selected, name);\n//     } else if (selectedIndex === 0) {\n//       newSelected = newSelected.concat(selected.slice(1));\n//     } else if (selectedIndex === selected.length - 1) {\n//       newSelected = newSelected.concat(selected.slice(0, -1));\n//     } else if (selectedIndex > 0) {\n//       newSelected = newSelected.concat(\n//         selected.slice(0, selectedIndex),\n//         selected.slice(selectedIndex + 1),\n//       );\n//     }\n//     setSelected(newSelected);\n//   };\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(parseInt(event.target.value, 10));\n//     setPage(0);\n//   };\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n//   const handleChangeDense = (event) => {\n//     setDense(event.target.checked);\n//   };\n//   const isSelected = (name) => selected.indexOf(name) !== -1;\n//   return (\n//     <React.Fragment>\n//       <AppAppBar />\n//     <div className={classes.root}>\n//       <Paper className={classes.paper}>\n//         <EnhancedTableToolbar numSelected={selected.length} />\n//         <TableContainer>\n//           <Table\n//             className={classes.table}\n//             aria-labelledby=\"tableTitle\"\n//             size={dense ? 'small' : 'medium'}\n//             aria-label=\"enhanced table\"\n//           >\n//             <EnhancedTableHead\n//               classes={classes}\n//               numSelected={selected.length}\n//               order={order}\n//               orderBy={orderBy}\n//               onSelectAllClick={handleSelectAllClick}\n//               onRequestSort={handleRequestSort}\n//               rowCount={rows.length}\n//             />\n//             <TableBody>\n//               {stableSort(rows, getComparator(order, orderBy))\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//                 .map((row, index) => {\n//                   const isItemSelected = isSelected(row.name);\n//                   const labelId = `enhanced-table-checkbox-${index}`;\n//                   return (\n//                     <TableRow\n//                       hover\n//                       onClick={(event) => handleClick(event, row.name)}\n//                       role=\"checkbox\"\n//                       aria-checked={isItemSelected}\n//                       tabIndex={-1}\n//                       key={row.name}\n//                       selected={isItemSelected}\n//                     >\n//                       <TableCell padding=\"checkbox\">\n//                         <Checkbox\n//                           checked={isItemSelected}\n//                           inputProps={{ 'aria-labelledby': labelId }}\n//                         />\n//                       </TableCell>\n//                       <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n//                         {row.name}\n//                       </TableCell>\n//                       <TableCell align=\"right\">{row.calories}</TableCell>\n//                       <TableCell align=\"right\">{row.fat}</TableCell>\n//                       <TableCell align=\"right\">{row.carbs}</TableCell>\n//                       <TableCell align=\"right\">{row.protein}</TableCell>\n//                     </TableRow>\n//                   );\n//                 })}\n//               {emptyRows > 0 && (\n//                 <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n//                   <TableCell colSpan={6} />\n//                 </TableRow>\n//               )}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//         <TablePagination\n//           rowsPerPageOptions={[5, 10, 25]}\n//           component=\"div\"\n//           count={rows.length}\n//           rowsPerPage={rowsPerPage}\n//           page={page}\n//           onPageChange={handleChangePage}\n//           onRowsPerPageChange={handleChangeRowsPerPage}\n//         />\n//       </Paper>\n//       <FormControlLabel\n//         control={<Switch checked={dense} onChange={handleChangeDense} />}\n//         label=\"Dense padding\"\n//       />\n//     </div>\n//     <AppFooter />\n//     </React.Fragment>\n//   );\n// }\n// export default withRoot(Bbs);\nimport withRoot from './withRoot';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Link from '@material-ui/core/Link';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport AppFooter from './views/AppFooter';\nimport AppAppBar from './views/AppAppBar';\nimport Button from '@material-ui/core/Button';\nimport { CenterFocusStrong } from '@material-ui/icons';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(title, writer, date, view) {\n  return {\n    title,\n    writer,\n    date,\n    view\n  };\n}\n\nconst rows = [createData('이동은', 3.7, 4), createData('이혜림', 25.0, 4), createData('강하림', 16.0, 6), createData('박성희', 6.0, 4), createData('이효주', 16.0, 3), createData('박지후', 3.2, 6), createData('양태균', 9.0, 4), createData('송하영', 0.0, 0), createData('bryan', 26.0, 7), createData('이주영', 0.2, 0), createData('남종운', 0, 2), createData('박세빈', 19.0, 37), createData('최지훈', 18.0, 4)];\nconst customers = [{\n  'id': 1,\n  'image': 'https://placeimg.com/64/64/1',\n  'name': 'handong',\n  'birthday': '991211',\n  'gender': 'man',\n  'job': 'student'\n}, {\n  'id': 2,\n  'image': 'https://placeimg.com/64/64/2',\n  'name': 'global',\n  'birthday': '981031',\n  'gender': 'woman',\n  'job': 'teacher'\n}, {\n  'id': 3,\n  'image': 'https://placeimg.com/64/64/3',\n  'name': 'university',\n  'birthday': '990909',\n  'gender': 'woman',\n  'job': 'sdfsdfs'\n}];\nconst headCells = [{\n  id: 'title',\n  numeric: false,\n  disablePadding: true,\n  label: '제목'\n}, {\n  id: 'writer',\n  numeric: true,\n  disablePadding: false,\n  label: '게시자'\n}, {\n  id: 'date',\n  numeric: true,\n  disablePadding: false,\n  label: '날짜'\n}, {\n  id: 'view',\n  numeric: true,\n  disablePadding: false,\n  label: '조회수'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '80%',\n    marginLeft: theme.spacing(20),\n    marginBottom: theme.spacing(1)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\n\nfunction Bbs() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [selected, setSelected] = React.useState([]);\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          variant: \"h4\",\n          id: \"tableTitle\",\n          component: \"div\",\n          children: \"\\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"\\uC0C8 \\uAC8C\\uC2DC\\uAE00 \\uC4F0\\uAE30\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            href: \"/write\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"filter list\",\n              children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            \"aria-labelledby\": \"tableTitle\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: headCell.numeric ? 'right' : 'left',\n                  padding: headCell.disablePadding ? 'none' : 'normal',\n                  children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                    children: headCell.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 19\n                  }, this)\n                }, headCell.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  role: \"button\",\n                  tabIndex: -1,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    padding: \"none\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      href: \"/write\",\n                      children: row.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: [row.writer, row.date, row.view]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 19\n                  }, this)]\n                }, row.title, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 17\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AppFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Bbs, \"isfotVcHEnqnH5YsxcMLlP2o9iw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Bbs;\nexport default _c2 = withRoot(Bbs);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Bbs\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/hyerm2/Desktop/2021SWFestival/HisStudy/src/Bbs.js"],"names":["withRoot","React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","Link","AddBoxIcon","AppFooter","AppAppBar","Button","CenterFocusStrong","useEffect","createData","title","writer","date","view","rows","customers","headCells","id","numeric","disablePadding","label","useStyles","theme","root","width","paper","marginLeft","spacing","marginBottom","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","Bbs","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","selected","setSelected","isSelected","name","indexOf","emptyRows","Math","min","length","map","headCell","slice","row"],"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","sourcesContent":["// import withRoot from './withRoot';\n// // --- Post bootstrap -----\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import clsx from 'clsx';\n// import { lighten, makeStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TablePagination from '@material-ui/core/TablePagination';\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import Paper from '@material-ui/core/Paper';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import IconButton from '@material-ui/core/IconButton';\n// import Tooltip from '@material-ui/core/Tooltip';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Switch from '@material-ui/core/Switch';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import FilterListIcon from '@material-ui/icons/FilterList';\n// import Link from '@material-ui/core/Link';\n// import AddBoxIcon from '@material-ui/icons/AddBox';\n// import AppFooter from './views/AppFooter';\n// import AppAppBar from './views/AppAppBar';\n// import Button from '@material-ui/core/Button';\n\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const rows = [\n//   createData('Cupcake', '이동은', 3.7, 4),\n//   createData('Donut', '이혜림', 25.0, 4),\n//   createData('Eclair', '강하림', 16.0, 6),\n//   createData('Frozen yoghurt', '박성희', 6.0, 4),\n//   createData('Gingerbread', '이효주', 16.0, 3),\n//   createData('Honeycomb', '박지후', 3.2, 6),\n//   createData('Ice cream sandwich', '양태균', 9.0, 4),\n//   createData('Jelly Bean', '송하영', 0.0, 0),\n//   createData('KitKat', 'bryan', 26.0, 7),\n//   createData('Lollipop', '이주영', 0.2, 0),\n//   createData('Marshmallow', '남종운', 0, 2),\n//   createData('Nougat', '박세빈', 19.0, 37),\n//   createData('Oreo', '최지훈', 18.0, 4),\n// ];\n\n// function descendingComparator(a, b, orderBy) {\n//   if (b[orderBy] < a[orderBy]) {\n//     return -1;\n//   }\n//   if (b[orderBy] > a[orderBy]) {\n//     return 1;\n//   }\n//   return 0;\n// }\n\n// function getComparator(order, orderBy) {\n//   return order === 'desc'\n//     ? (a, b) => descendingComparator(a, b, orderBy)\n//     : (a, b) => -descendingComparator(a, b, orderBy);\n// }\n\n// function stableSort(array, comparator) {\n//   const stabilizedThis = array.map((el, index) => [el, index]);\n//   stabilizedThis.sort((a, b) => {\n//     const order = comparator(a[0], b[0]);\n//     if (order !== 0) return order;\n//     return a[1] - b[1];\n//   });\n//   return stabilizedThis.map((el) => el[0]);\n// }\n\n// const headCells = [\n//   { id: 'name', numeric: false, disablePadding: true, label: '제목' },\n//   { id: 'calories', numeric: true, disablePadding: false, label: '게시자' },\n//   { id: 'fat', numeric: true, disablePadding: false, label: '날짜' },\n//   { id: 'protein', numeric: true, disablePadding: false, label: '조회수' },\n// ];\n\n// function EnhancedTableHead(props) {\n//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n//   const createSortHandler = (property) => (event) => {\n//     onRequestSort(event, property);\n//   };\n\n//   return (\n    \n//     <TableHead>\n//       <TableRow>\n//         <TableCell padding=\"checkbox\">\n//           <Checkbox\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\n//             checked={rowCount > 0 && numSelected === rowCount}\n//             onChange={onSelectAllClick}\n//             inputProps={{ 'aria-label': 'select all desserts' }}\n//           />\n//         </TableCell>\n//         {headCells.map((headCell) => (\n//           <TableCell\n//             key={headCell.id}\n//             align={headCell.numeric ? 'right' : 'left'}\n//             padding={headCell.disablePadding ? 'none' : 'normal'}\n//             sortDirection={orderBy === headCell.id ? order : false}\n//           >\n//             <TableSortLabel\n//               active={orderBy === headCell.id}\n//               direction={orderBy === headCell.id ? order : 'asc'}\n//               onClick={createSortHandler(headCell.id)}\n//             >\n//               {headCell.label}\n//               {orderBy === headCell.id ? (\n//                 <span className={classes.visuallyHidden}>\n//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n//                 </span>\n//               ) : null}\n//             </TableSortLabel>\n//           </TableCell>\n//         ))}\n//       </TableRow>\n//     </TableHead>\n//   );\n// }\n\n// EnhancedTableHead.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   numSelected: PropTypes.number.isRequired,\n//   onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n//   orderBy: PropTypes.string.isRequired,\n//   rowCount: PropTypes.number.isRequired,\n// };\n\n// const useToolbarStyles = makeStyles((theme) => ({\n//   root: {\n//     paddingLeft: theme.spacing(2),\n//     paddingRight: theme.spacing(1),\n//   },\n//   highlight:\n//     theme.palette.type === 'light'\n//       ? {\n//           color: theme.palette.secondary.main,\n//           backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n//         }\n//       : {\n//           color: theme.palette.text.primary,\n//           backgroundColor: theme.palette.secondary.dark,\n//         },\n//   title: {\n//     flex: '1 1 100%',\n//   },\n// }));\n\n// const EnhancedTableToolbar = (props) => {\n//   const classes = useToolbarStyles();\n//   const { numSelected } = props;\n\n//   return (\n//     <Toolbar\n//       className={clsx(classes.root, {\n//         [classes.highlight]: numSelected > 0,\n//       })}\n//     >\n//       {numSelected > 0 ? (\n//         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n//           {numSelected} selected\n//         </Typography>\n//       ) : (\n//         <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n//          게시판\n//         </Typography>\n//       )}\n\n//       {numSelected > 0 ? (\n//         <Tooltip title=\"글 삭제하기\">\n//           <IconButton aria-label=\"delete\">\n//             <DeleteIcon />\n//           </IconButton>\n//         </Tooltip>\n//       ) : (\n//         <Tooltip title=\"새 게시글 쓰기\">\n//            <Button href= '/bbs2'>\n//            <IconButton aria-label=\"filter list\">\n//             <AddBoxIcon />\n//           </IconButton>\n//            </Button>\n           \n           \n//         </Tooltip>\n//       )}\n//     </Toolbar>\n//   );\n// };\n\n// EnhancedTableToolbar.propTypes = {\n//   numSelected: PropTypes.number.isRequired,\n// };\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//   },\n//   paper: {\n//     width: '100%',\n//     marginBottom: theme.spacing(2),\n//   },\n//   table: {\n//     minWidth: 750,\n//   },\n//   visuallyHidden: {\n//     border: 0,\n//     clip: 'rect(0 0 0 0)',\n//     height: 1,\n//     margin: -1,\n//     overflow: 'hidden',\n//     padding: 0,\n//     position: 'absolute',\n//     top: 20,\n//     width: 1,\n//   },\n// }));\n\n// function Bbs() {\n//   const classes = useStyles();\n//   const [order, setOrder] = React.useState('asc');\n//   const [orderBy, setOrderBy] = React.useState('calories');\n//   const [selected, setSelected] = React.useState([]);\n//   const [page, setPage] = React.useState(0);\n//   const [dense, setDense] = React.useState(false);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n//   const handleRequestSort = (event, property) => {\n//     const isAsc = orderBy === property && order === 'asc';\n//     setOrder(isAsc ? 'desc' : 'asc');\n//     setOrderBy(property);\n//   };\n\n//   const handleSelectAllClick = (event) => {\n//     if (event.target.checked) {\n//       const newSelecteds = rows.map((n) => n.name);\n//       setSelected(newSelecteds);\n//       return;\n//     }\n//     setSelected([]);\n//   };\n\n//   const handleClick = (event, name) => {\n//     const selectedIndex = selected.indexOf(name);\n//     let newSelected = [];\n\n//     if (selectedIndex === -1) {\n//       newSelected = newSelected.concat(selected, name);\n//     } else if (selectedIndex === 0) {\n//       newSelected = newSelected.concat(selected.slice(1));\n//     } else if (selectedIndex === selected.length - 1) {\n//       newSelected = newSelected.concat(selected.slice(0, -1));\n//     } else if (selectedIndex > 0) {\n//       newSelected = newSelected.concat(\n//         selected.slice(0, selectedIndex),\n//         selected.slice(selectedIndex + 1),\n//       );\n//     }\n\n//     setSelected(newSelected);\n//   };\n\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(parseInt(event.target.value, 10));\n//     setPage(0);\n//   };\n\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n\n//   const handleChangeDense = (event) => {\n//     setDense(event.target.checked);\n//   };\n\n//   const isSelected = (name) => selected.indexOf(name) !== -1;\n\n\n//   return (\n//     <React.Fragment>\n//       <AppAppBar />\n//     <div className={classes.root}>\n//       <Paper className={classes.paper}>\n//         <EnhancedTableToolbar numSelected={selected.length} />\n//         <TableContainer>\n//           <Table\n//             className={classes.table}\n//             aria-labelledby=\"tableTitle\"\n//             size={dense ? 'small' : 'medium'}\n//             aria-label=\"enhanced table\"\n//           >\n//             <EnhancedTableHead\n//               classes={classes}\n//               numSelected={selected.length}\n//               order={order}\n//               orderBy={orderBy}\n//               onSelectAllClick={handleSelectAllClick}\n//               onRequestSort={handleRequestSort}\n//               rowCount={rows.length}\n//             />\n//             <TableBody>\n//               {stableSort(rows, getComparator(order, orderBy))\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//                 .map((row, index) => {\n//                   const isItemSelected = isSelected(row.name);\n//                   const labelId = `enhanced-table-checkbox-${index}`;\n\n//                   return (\n//                     <TableRow\n//                       hover\n//                       onClick={(event) => handleClick(event, row.name)}\n//                       role=\"checkbox\"\n//                       aria-checked={isItemSelected}\n//                       tabIndex={-1}\n//                       key={row.name}\n//                       selected={isItemSelected}\n//                     >\n//                       <TableCell padding=\"checkbox\">\n//                         <Checkbox\n//                           checked={isItemSelected}\n//                           inputProps={{ 'aria-labelledby': labelId }}\n//                         />\n//                       </TableCell>\n//                       <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n//                         {row.name}\n//                       </TableCell>\n//                       <TableCell align=\"right\">{row.calories}</TableCell>\n//                       <TableCell align=\"right\">{row.fat}</TableCell>\n//                       <TableCell align=\"right\">{row.carbs}</TableCell>\n//                       <TableCell align=\"right\">{row.protein}</TableCell>\n//                     </TableRow>\n//                   );\n//                 })}\n//               {emptyRows > 0 && (\n//                 <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n//                   <TableCell colSpan={6} />\n//                 </TableRow>\n//               )}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//         <TablePagination\n//           rowsPerPageOptions={[5, 10, 25]}\n//           component=\"div\"\n//           count={rows.length}\n//           rowsPerPage={rowsPerPage}\n//           page={page}\n//           onPageChange={handleChangePage}\n//           onRowsPerPageChange={handleChangeRowsPerPage}\n//         />\n//       </Paper>\n//       <FormControlLabel\n//         control={<Switch checked={dense} onChange={handleChangeDense} />}\n//         label=\"Dense padding\"\n//       />\n//     </div>\n//     <AppFooter />\n//     </React.Fragment>\n//   );\n// }\n// export default withRoot(Bbs);\n\n\nimport withRoot from './withRoot';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Link from '@material-ui/core/Link';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport AppFooter from './views/AppFooter';\nimport AppAppBar from './views/AppAppBar';\nimport Button from '@material-ui/core/Button';\nimport { CenterFocusStrong } from '@material-ui/icons';\nimport { useEffect } from \"react\";\n\nfunction createData(title, writer, date, view) {\n  return { title, writer, date, view };\n}\n\nconst rows = [\n  createData('이동은', 3.7, 4),\n  createData('이혜림', 25.0, 4),\n  createData('강하림', 16.0, 6),\n  createData('박성희', 6.0, 4),\n  createData('이효주', 16.0, 3),\n  createData('박지후', 3.2, 6),\n  createData('양태균', 9.0, 4),\n  createData( '송하영', 0.0, 0),\n  createData('bryan', 26.0, 7),\n  createData( '이주영', 0.2, 0),\n  createData('남종운', 0, 2),\n  createData('박세빈', 19.0, 37),\n  createData('최지훈', 18.0, 4),\n];\n\nconst customers =[\n  {\n    'id' : 1,\n    'image' : 'https://placeimg.com/64/64/1',\n    'name' : 'handong',\n    'birthday' : '991211',\n    'gender' : 'man',\n    'job' : 'student'\n  },\n  {\n    'id' : 2,\n    'image' : 'https://placeimg.com/64/64/2',\n    'name' : 'global',\n    'birthday' : '981031',\n    'gender' : 'woman',\n    'job' : 'teacher'\n  },\n  {\n    'id' : 3,\n    'image' : 'https://placeimg.com/64/64/3',\n    'name' : 'university',\n    'birthday' : '990909',\n    'gender' : 'woman',\n    'job' : 'sdfsdfs'\n  }\n]\n\nconst headCells = [\n  { id: 'title', numeric: false, disablePadding: true, label: '제목' },\n  { id: 'writer', numeric: true, disablePadding: false, label: '게시자' },\n  { id: 'date', numeric: true, disablePadding: false, label: '날짜' },\n  { id: 'view', numeric: true, disablePadding: false, label: '조회수' },\n];\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '80%',\n    marginLeft: theme.spacing(20),\n    marginBottom: theme.spacing(1),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\nfunction Bbs() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [selected, setSelected] = React.useState([]);\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n \n  return (\n    <React.Fragment>\n    <AppAppBar />\n\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n      <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n         게시판\n      </Typography>\n      <Tooltip title=\"새 게시글 쓰기\">\n        <Button href= '/write'>\n          <IconButton aria-label=\"filter list\">\n            <AddBoxIcon />\n          </IconButton>\n        </Button>\n      </Tooltip>        \n      <TableContainer>\n        <Table\n          className={classes.table}\n          aria-labelledby=\"tableTitle\"\n        >\n          <TableHead>\n            <TableRow>\n           {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n              {row.name}\n            </TableCell> */}\n              {/* <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                {row.name}\n              </TableCell> */}\n              {headCells.map((headCell) => (\n                <TableCell\n                  key={headCell.id}\n                  align={headCell.numeric ? 'right' : 'left'}\n                  padding={headCell.disablePadding ? 'none' : 'normal'}\n                >\n                  <TableSortLabel>\n                    {headCell.label}\n                  </TableSortLabel>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n              return(\n                <TableRow \n                  hover\n                  role=\"button\"\n                  tabIndex={-1}\n                  key={row.title}\n                >\n                  <TableCell component=\"th\"  scope=\"row\" padding=\"none\">\n                    <Link href=\"/write\" >\n                      {row.title}\n                    </Link>\n                  </TableCell>\n                  {/* <TableCell align=\"right\">{row.writer}</TableCell>\n                  <TableCell align=\"right\">{row.date}</TableCell>\n                  <TableCell align=\"right\">{row.view}</TableCell> */}\n                  <TableBody>\n                    {row.writer}\n                    {row.date}\n                    {row.view}\n                  </TableBody>\n                </TableRow>\n              );\n            })}\n            <TableRow>\n              <TableCell colSpan={6} />\n            </TableRow>\n\n          </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n    <AppFooter />\n    </React.Fragment>\n  );\n}\nexport default withRoot(Bbs);"]},"metadata":{},"sourceType":"module"}