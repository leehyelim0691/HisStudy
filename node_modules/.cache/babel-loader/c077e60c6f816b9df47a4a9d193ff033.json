{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.compiler = compiler;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash.get');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _unified = require('unified');\n\nvar _unified2 = _interopRequireDefault(_unified);\n\nvar _remarkParse = require('remark-parse');\n\nvar _remarkParse2 = _interopRequireDefault(_remarkParse);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _toArray(arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n}\n\nvar BLOCK_ELEMENT_TAGS = ['article', 'header', 'aside', 'hgroup', 'blockquote', 'hr', 'iframe', 'body', 'li', 'map', 'button', 'object', 'canvas', 'ol', 'caption', 'output', 'col', 'p', 'colgroup', 'pre', 'dd', 'progress', 'div', 'section', 'dl', 'table', 'td', 'dt', 'tbody', 'embed', 'textarea', 'fieldset', 'tfoot', 'figcaption', 'th', 'figure', 'thead', 'footer', 'tr', 'form', 'ul', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'video', 'script', 'style'];\nvar BLOCK_ELEMENT_REGEX = new RegExp('^<(' + BLOCK_ELEMENT_TAGS.join('|') + ')', 'i'); // [0] === tag, [...] = attribute pairs\n\nvar HTML_EXTRACTOR_REGEX = /([-A-Za-z0-9_]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g;\nvar SELF_CLOSING_ELEMENT_TAGS = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\nvar SELF_CLOSING_ELEMENT_REGEX = new RegExp('^<(' + SELF_CLOSING_ELEMENT_TAGS.join('|') + ')', 'i');\nvar TEXT_AST_TYPES = ['text', 'textNode'];\nvar ATTRIBUTE_TO_JSX_PROP_MAP = {\n  'accept-charset': 'acceptCharset',\n  'accesskey': 'accessKey',\n  'allowfullscreen': 'allowFullScreen',\n  'allowtransparency': 'allowTransparency',\n  'autocomplete': 'autoComplete',\n  'autofocus': 'autoFocus',\n  'autoplay': 'autoPlay',\n  'cellpadding': 'cellPadding',\n  'cellspacing': 'cellSpacing',\n  'charset': 'charSet',\n  'class': 'className',\n  'classid': 'classId',\n  'colspan': 'colSpan',\n  'contenteditable': 'contentEditable',\n  'contextmenu': 'contextMenu',\n  'crossorigin': 'crossOrigin',\n  'enctype': 'encType',\n  'for': 'htmlFor',\n  'formaction': 'formAction',\n  'formenctype': 'formEncType',\n  'formmethod': 'formMethod',\n  'formnovalidate': 'formNoValidate',\n  'formtarget': 'formTarget',\n  'frameborder': 'frameBorder',\n  'hreflang': 'hrefLang',\n  'http-equiv': 'httpEquiv',\n  'inputmode': 'inputMode',\n  'keyparams': 'keyParams',\n  'keytype': 'keyType',\n  'marginheight': 'marginHeight',\n  'marginwidth': 'marginWidth',\n  'maxlength': 'maxLength',\n  'mediagroup': 'mediaGroup',\n  'minlength': 'minLength',\n  'novalidate': 'noValidate',\n  'radiogroup': 'radioGroup',\n  'readonly': 'readOnly',\n  'rowspan': 'rowSpan',\n  'spellcheck': 'spellCheck',\n  'srcdoc': 'srcDoc',\n  'srclang': 'srcLang',\n  'srcset': 'srcSet',\n  'tabindex': 'tabIndex',\n  'usemap': 'useMap'\n};\nvar getType = Object.prototype.toString;\n\nfunction extractDefinitionsFromASTTree(ast, parser) {\n  function reducer(aggregator, node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      aggregator.definitions[node.identifier] = node;\n\n      if (node.type === 'footnoteDefinition') {\n        if (node.children && node.children.length === 1 && node.children[0].type === 'paragraph') {\n          node.children[0].children.unshift({\n            type: 'textNode',\n            value: '[' + node.identifier + ']: '\n          });\n        }\n        /* package the prefix inside the first child */\n\n\n        aggregator.footnotes.push(_react2.default.createElement('div', {\n          key: node.identifier,\n          id: node.identifier\n        }, node.value || node.children.map(parser)));\n      }\n    }\n\n    return Array.isArray(node.children) ? node.children.reduce(reducer, aggregator) : aggregator;\n  }\n\n  ;\n  return [ast].reduce(reducer, {\n    definitions: {},\n    footnotes: []\n  });\n}\n\nfunction formExtraPropsForHTMLNodeType() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var ast = arguments[1];\n  var definitions = arguments[2];\n\n  switch (ast.type) {\n    case 'footnoteReference':\n      return _extends({}, props, {\n        href: '#' + ast.identifier\n      });\n\n    case 'image':\n      return _extends({}, props, {\n        title: ast.title,\n        alt: ast.alt,\n        src: ast.url\n      });\n\n    case 'imageReference':\n      return _extends({}, props, {\n        title: (0, _lodash2.default)(definitions, '[\\'' + ast.identifier + '\\'].title'),\n        alt: ast.alt,\n        src: (0, _lodash2.default)(definitions, '[\\'' + ast.identifier + '\\'].url')\n      });\n\n    case 'link':\n      return _extends({}, props, {\n        title: ast.title,\n        href: ast.url\n      });\n\n    case 'linkReference':\n      return _extends({}, props, {\n        title: (0, _lodash2.default)(definitions, '[\\'' + ast.identifier + '\\'].title'),\n        href: (0, _lodash2.default)(definitions, '[\\'' + ast.identifier + '\\'].url')\n      });\n\n    case 'list':\n      return _extends({}, props, {\n        start: ast.start\n      });\n\n    case 'tableCell':\n    case 'th':\n      return _extends({}, props, {\n        style: {\n          textAlign: ast.align\n        }\n      });\n  }\n\n  return props;\n}\n\nfunction getHTMLNodeTypeFromASTNodeType(node) {\n  switch (node.type) {\n    case 'break':\n      return 'br';\n\n    case 'delete':\n      return 'del';\n\n    case 'emphasis':\n      return 'em';\n\n    case 'footnoteReference':\n      return 'a';\n\n    case 'heading':\n      return 'h' + node.depth;\n\n    case 'image':\n    case 'imageReference':\n      return 'img';\n\n    case 'inlineCode':\n      return 'code';\n\n    case 'link':\n    case 'linkReference':\n      return 'a';\n\n    case 'list':\n      return node.ordered ? 'ol' : 'ul';\n\n    case 'listItem':\n      return 'li';\n\n    case 'paragraph':\n      return 'p';\n\n    case 'root':\n      return 'div';\n\n    case 'tableHeader':\n      return 'thead';\n\n    case 'tableRow':\n      return 'tr';\n\n    case 'tableCell':\n      return 'td';\n\n    case 'thematicBreak':\n      return 'hr';\n\n    case 'definition':\n    case 'footnoteDefinition':\n    case 'yaml':\n      return null;\n\n    default:\n      return node.type;\n  }\n}\n\nfunction seekCellsAndAlignThemIfNecessary(root, alignmentValues) {\n  var mapper = function mapper(child, index) {\n    if (child.type === 'tableCell') {\n      return _extends({}, child, {\n        align: alignmentValues[index]\n      });\n    } else if (Array.isArray(child.children) && child.children.length) {\n      return child.children.map(mapper);\n    }\n\n    return child;\n  };\n\n  if (Array.isArray(root.children) && root.children.length) {\n    root.children = root.children.map(mapper);\n  }\n\n  return root;\n}\n\nfunction attributeValueToJSXPropValue(key, value) {\n  if (key === 'style') {\n    return value.split(/;\\s?/).reduce(function (styles, kvPair) {\n      var key = kvPair.slice(0, kvPair.indexOf(':')); // snake-case to camelCase\n      // also handles PascalCasing vendor prefixes\n\n      var camelCasedKey = key.replace(/(\\-[a-z])/g, function (substr) {\n        return substr[1].toUpperCase();\n      }); // key.length + 1 to skip over the colon\n\n      styles[camelCasedKey] = kvPair.slice(key.length + 1).trim();\n      return styles;\n    }, {});\n  }\n\n  return value;\n}\n\nfunction coalesceInlineHTML(ast) {\n  function coalescer(node, index, siblings) {\n    if (node.type === 'html') {\n      // ignore block-level elements\n      if (BLOCK_ELEMENT_REGEX.test(node.value)) {\n        return;\n      } // ignore self-closing or non-content-bearing elements\n\n\n      if (SELF_CLOSING_ELEMENT_REGEX.test(node.value)) {\n        return;\n      } // are there more html nodes directly after? if so, fold them into the current node\n\n\n      if (index < siblings.length - 1 && siblings[index + 1].type === 'html') {\n        // create a new coalescer context\n        coalescer(siblings[index + 1], index + 1, siblings);\n      }\n\n      var i = index + 1;\n      var end = void 0; // where's the end tag?\n\n      while (end === undefined && i < siblings.length) {\n        if (siblings[i].type !== 'html') {\n          i += 1;\n          continue;\n        }\n\n        end = siblings[i];\n      }\n      /* all interim elements now become children of the current node, and we splice them (including end tag)\n         out of the sibling array so they will not be iterated-over by forEach */\n\n\n      node.children = siblings.slice(index + 1, i);\n      siblings.splice(index + 1, i - index);\n\n      var _node$value$match = node.value.match(HTML_EXTRACTOR_REGEX),\n          _node$value$match2 = _toArray(_node$value$match),\n          tag = _node$value$match2[0],\n          attributePairs = _node$value$match2.slice(1); // reassign the current node to whatever its tag is\n\n\n      node.type = tag.toLowerCase(); // make a best-effort conversion to JSX props\n\n      node.props = attributePairs.reduce(function (props, kvPair) {\n        var valueIndex = kvPair.indexOf('=');\n        var key = kvPair.slice(0, valueIndex === -1 ? undefined : valueIndex); // ignoring inline event handlers at this time - they pose enough of a security risk that they're\n        // not worth preserving; there's a reason React calls it \"dangerouslySetInnerHTML\"!\n\n        if (key.indexOf('on') !== 0) {\n          var value = kvPair.slice(key.length + 1); // strip the outermost single/double quote if it exists\n\n          if (value[0] === '\"' || value[0] === '\\'') {\n            value = value.slice(1, value.length - 1);\n          }\n\n          props[ATTRIBUTE_TO_JSX_PROP_MAP[key] || key] = attributeValueToJSXPropValue(key, value) || true;\n        }\n\n        return props;\n      }, {}); // null out .value or astToJSX() will set it as the child\n\n      node.value = null;\n    }\n\n    if (node.children) {\n      node.children.forEach(coalescer);\n    }\n  }\n\n  ;\n  return ast.children.forEach(coalescer);\n}\n\nfunction compiler(markdown) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$overrides = _ref.overrides,\n      overrides = _ref$overrides === undefined ? {} : _ref$overrides;\n\n  var definitions = void 0;\n  var footnotes = void 0;\n\n  function astToJSX(ast, index) {\n    /* `this` is the dictionary of definitions */\n    if (TEXT_AST_TYPES.indexOf(ast.type) !== -1) {\n      return ast.value;\n    }\n\n    var key = index || '0';\n\n    if (ast.type === 'code' && ast.value) {\n      var preProps = _extends({}, (0, _lodash2.default)(overrides, 'pre.props', {}), {\n        key: key\n      });\n\n      var langClassName = 'lang-' + ast.lang;\n      var codeBaseProps = (0, _lodash2.default)(overrides, 'code.props', {});\n\n      var codeProps = _extends({}, codeBaseProps, {\n        className: codeBaseProps.className ? codeBaseProps.className + ' ' + langClassName : langClassName\n      });\n\n      return _react2.default.createElement((0, _lodash2.default)(overrides, 'pre.component', 'pre'), preProps, _react2.default.createElement((0, _lodash2.default)(overrides, 'code.component', 'code'), codeProps, ast.value));\n    }\n    /* Refers to fenced blocks, need to create a pre:code nested structure */\n\n\n    if (ast.type === 'list' && ast.loose === false) {\n      ast.children = ast.children.map(function (item) {\n        if (item.children.length === 1 && item.children[0].type === 'paragraph') {\n          return _extends({}, item, {\n            children: item.children[0].children\n          });\n        }\n\n        return item;\n      });\n    }\n    /* tight list, remove the paragraph wrapper just inside the listItem */\n\n\n    if (ast.type === 'listItem') {\n      if (ast.checked === true || ast.checked === false) {\n        var liProps = _extends({}, (0, _lodash2.default)(overrides, 'li.props', {}), {\n          key: key\n        });\n\n        var inputProps = _extends({}, (0, _lodash2.default)(overrides, 'input.props', {}), {\n          key: 'checkbox',\n          type: 'checkbox',\n          checked: ast.checked,\n          readOnly: true\n        });\n\n        return _react2.default.createElement((0, _lodash2.default)(overrides, 'li.component', 'li'), liProps, [_react2.default.createElement((0, _lodash2.default)(overrides, 'input.component', 'input'), inputProps), ast.children.map(astToJSX)]);\n      }\n      /* gfm task list, need to add a checkbox */\n\n    }\n\n    if (ast.type === 'html') {\n      return _react2.default.createElement('div', {\n        key: key,\n        dangerouslySetInnerHTML: {\n          __html: ast.value\n        }\n      });\n    }\n    /* arbitrary HTML, do the gross thing for now */\n\n\n    if (ast.type === 'table') {\n      var tbody = {\n        type: 'tbody',\n        children: []\n      };\n      ast.children = ast.children.reduce(function (children, child, index) {\n        if (index === 0) {\n          /* manually marking the first row as tableHeader since that was removed in remark@4.x; it's important semantically. */\n          child.type = 'tableHeader';\n          children.unshift(seekCellsAndAlignThemIfNecessary(child, ast.align));\n        } else if (child.type === 'tableRow') {\n          tbody.children.push(seekCellsAndAlignThemIfNecessary(child, ast.align));\n        } else if (child.type === 'tableFooter') {\n          children.push(seekCellsAndAlignThemIfNecessary(child, ast.align));\n        }\n\n        return children;\n      }, [tbody]);\n    }\n    /* React yells if things aren't in the proper structure, so need to\n      delve into the immediate children and wrap tablerow(s) in a tbody */\n\n\n    if (ast.type === 'tableFooter') {\n      ast.children = [{\n        type: 'tr',\n        children: ast.children\n      }];\n    }\n    /* React yells if things aren't in the proper structure, so need to\n      delve into the immediate children and wrap the cells in a tablerow */\n\n\n    if (ast.type === 'tableHeader') {\n      ast.children = [{\n        type: 'tr',\n        children: ast.children.map(function (child) {\n          if (child.type === 'tableCell') {\n            child.type = 'th';\n          }\n          /* et voila, a proper table header */\n\n\n          return child;\n        })\n      }];\n    }\n    /* React yells if things aren't in the proper structure, so need to\n      delve into the immediate children and wrap the cells in a tablerow */\n\n\n    if (ast.type === 'footnoteReference') {\n      ast.children = [{\n        type: 'sup',\n        value: ast.identifier\n      }];\n    }\n    /* place the identifier inside a superscript tag for the link */\n\n\n    var htmlNodeType = getHTMLNodeTypeFromASTNodeType(ast);\n\n    if (htmlNodeType === null) {\n      return null;\n    }\n    /* bail out, not convertable to any HTML representation */\n\n\n    var props = _extends({\n      key: key\n    }, ast.props);\n\n    var override = overrides[htmlNodeType];\n\n    if (override) {\n      if (override.component) {\n        htmlNodeType = override.component;\n      }\n      /* sub out the normal html tag name for the JSX / ReactFactory\n         passed in by the caller */\n\n\n      if (override.props) {\n        props = _extends({}, override.props, props);\n      }\n      /* apply the prop overrides beneath the minimal set that are necessary\n         to have the markdown conversion work as expected */\n\n    }\n    /* their props + our props, with any duplicate keys overwritten by us\n       (necessary evil, file an issue if something comes up that needs\n       extra attention, only props specified in `formExtraPropsForHTMLNodeType`\n       will be overwritten on a key collision) */\n\n\n    var finalProps = formExtraPropsForHTMLNodeType(props, ast, definitions);\n\n    if (ast.children && ast.children.length === 1) {\n      if (TEXT_AST_TYPES.indexOf(ast.children[0].type) !== -1) {\n        ast.children = ast.children[0].value;\n      }\n    }\n    /* solitary text children don't need full parsing or React will add a wrapper */\n\n\n    var children = Array.isArray(ast.children) ? ast.children.map(astToJSX) : ast.children;\n    return _react2.default.createElement(htmlNodeType, finalProps, ast.value || children);\n  }\n\n  if (typeof markdown !== 'string') {\n    throw new Error('markdown-to-jsx: the first argument must be\\n                         a string');\n  }\n\n  if (getType.call(overrides) !== '[object Object]') {\n    throw new Error('markdown-to-jsx: options.overrides (second argument property) must be\\n                         undefined or an object literal with shape:\\n                         {\\n                            htmltagname: {\\n                                component: string|ReactComponent(optional),\\n                                props: object(optional)\\n                            }\\n                         }');\n  }\n\n  var remarkAST = (0, _unified2.default)().data('settings', {\n    footnotes: true,\n    gfm: true,\n    position: false\n  }).use(_remarkParse2.default).parse(markdown);\n  var extracted = extractDefinitionsFromASTTree(remarkAST, astToJSX);\n  definitions = extracted.definitions;\n  footnotes = extracted.footnotes;\n  coalesceInlineHTML(remarkAST);\n  var jsx = astToJSX(remarkAST); // discard the root <div> node if there is only one valid initial child\n  // generally this is a paragraph\n\n  if (jsx.props.children.length === 1) {\n    jsx = jsx.props.children[0];\n  }\n\n  if (footnotes.length) {\n    jsx.props.children.push(_react2.default.createElement('footer', {\n      key: 'footnotes'\n    }, footnotes));\n  }\n\n  return jsx;\n}\n\n;\n/**\n * A simple HOC for easy React use. Feed the markdown content as a direct child\n * and the rest is taken care of automatically.\n *\n * @param  {String}   options.children   must be a string\n * @param  {Object}   options.options    markdown-to-jsx options (arg 2 of the compiler)\n *\n * @return {ReactElement} the compiled JSX\n */\n\nvar Component = function Component(_ref2) {\n  var children = _ref2.children,\n      options = _ref2.options,\n      props = _objectWithoutProperties(_ref2, ['children', 'options']);\n\n  return compiler(children, options);\n};\n\nComponent.propTypes = {\n  children: _propTypes2.default.string.isRequired,\n  options: _propTypes2.default.object\n};\nexports.default = Component;","map":{"version":3,"sources":["/Users/hyerm2/Desktop/2021SWFestival/HisStudy/node_modules/markdown-to-jsx/index.es5.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","compiler","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","_lodash","_lodash2","_unified","_unified2","_remarkParse","_remarkParse2","obj","__esModule","default","_objectWithoutProperties","keys","indexOf","_toArray","arr","Array","isArray","from","BLOCK_ELEMENT_TAGS","BLOCK_ELEMENT_REGEX","RegExp","join","HTML_EXTRACTOR_REGEX","SELF_CLOSING_ELEMENT_TAGS","SELF_CLOSING_ELEMENT_REGEX","TEXT_AST_TYPES","ATTRIBUTE_TO_JSX_PROP_MAP","getType","toString","extractDefinitionsFromASTTree","ast","parser","reducer","aggregator","node","type","definitions","identifier","children","unshift","footnotes","push","createElement","id","map","reduce","formExtraPropsForHTMLNodeType","props","undefined","href","title","alt","src","url","start","style","textAlign","align","getHTMLNodeTypeFromASTNodeType","depth","ordered","seekCellsAndAlignThemIfNecessary","root","alignmentValues","mapper","child","index","attributeValueToJSXPropValue","split","styles","kvPair","slice","camelCasedKey","replace","substr","toUpperCase","trim","coalesceInlineHTML","coalescer","siblings","test","end","splice","_node$value$match","match","_node$value$match2","tag","attributePairs","toLowerCase","valueIndex","forEach","markdown","_ref","_ref$overrides","overrides","astToJSX","preProps","langClassName","lang","codeBaseProps","codeProps","className","loose","item","checked","liProps","inputProps","readOnly","dangerouslySetInnerHTML","__html","tbody","htmlNodeType","override","component","finalProps","Error","remarkAST","data","gfm","position","use","parse","extracted","jsx","Component","_ref2","options","propTypes","string","isRequired","object"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.compiler = compiler;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash.get');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _unified = require('unified');\n\nvar _unified2 = _interopRequireDefault(_unified);\n\nvar _remarkParse = require('remark-parse');\n\nvar _remarkParse2 = _interopRequireDefault(_remarkParse);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nvar BLOCK_ELEMENT_TAGS = ['article', 'header', 'aside', 'hgroup', 'blockquote', 'hr', 'iframe', 'body', 'li', 'map', 'button', 'object', 'canvas', 'ol', 'caption', 'output', 'col', 'p', 'colgroup', 'pre', 'dd', 'progress', 'div', 'section', 'dl', 'table', 'td', 'dt', 'tbody', 'embed', 'textarea', 'fieldset', 'tfoot', 'figcaption', 'th', 'figure', 'thead', 'footer', 'tr', 'form', 'ul', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'video', 'script', 'style'];\nvar BLOCK_ELEMENT_REGEX = new RegExp('^<(' + BLOCK_ELEMENT_TAGS.join('|') + ')', 'i');\n\n// [0] === tag, [...] = attribute pairs\nvar HTML_EXTRACTOR_REGEX = /([-A-Za-z0-9_]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g;\nvar SELF_CLOSING_ELEMENT_TAGS = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\nvar SELF_CLOSING_ELEMENT_REGEX = new RegExp('^<(' + SELF_CLOSING_ELEMENT_TAGS.join('|') + ')', 'i');\nvar TEXT_AST_TYPES = ['text', 'textNode'];\n\nvar ATTRIBUTE_TO_JSX_PROP_MAP = {\n    'accept-charset': 'acceptCharset',\n    'accesskey': 'accessKey',\n    'allowfullscreen': 'allowFullScreen',\n    'allowtransparency': 'allowTransparency',\n    'autocomplete': 'autoComplete',\n    'autofocus': 'autoFocus',\n    'autoplay': 'autoPlay',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'charset': 'charSet',\n    'class': 'className',\n    'classid': 'classId',\n    'colspan': 'colSpan',\n    'contenteditable': 'contentEditable',\n    'contextmenu': 'contextMenu',\n    'crossorigin': 'crossOrigin',\n    'enctype': 'encType',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'formenctype': 'formEncType',\n    'formmethod': 'formMethod',\n    'formnovalidate': 'formNoValidate',\n    'formtarget': 'formTarget',\n    'frameborder': 'frameBorder',\n    'hreflang': 'hrefLang',\n    'http-equiv': 'httpEquiv',\n    'inputmode': 'inputMode',\n    'keyparams': 'keyParams',\n    'keytype': 'keyType',\n    'marginheight': 'marginHeight',\n    'marginwidth': 'marginWidth',\n    'maxlength': 'maxLength',\n    'mediagroup': 'mediaGroup',\n    'minlength': 'minLength',\n    'novalidate': 'noValidate',\n    'radiogroup': 'radioGroup',\n    'readonly': 'readOnly',\n    'rowspan': 'rowSpan',\n    'spellcheck': 'spellCheck',\n    'srcdoc': 'srcDoc',\n    'srclang': 'srcLang',\n    'srcset': 'srcSet',\n    'tabindex': 'tabIndex',\n    'usemap': 'useMap'\n};\n\nvar getType = Object.prototype.toString;\n\nfunction extractDefinitionsFromASTTree(ast, parser) {\n    function reducer(aggregator, node) {\n        if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n            aggregator.definitions[node.identifier] = node;\n\n            if (node.type === 'footnoteDefinition') {\n                if (node.children && node.children.length === 1 && node.children[0].type === 'paragraph') {\n                    node.children[0].children.unshift({\n                        type: 'textNode',\n                        value: '[' + node.identifier + ']: '\n                    });\n                } /* package the prefix inside the first child */\n\n                aggregator.footnotes.push(_react2.default.createElement(\n                    'div',\n                    { key: node.identifier, id: node.identifier },\n                    node.value || node.children.map(parser)\n                ));\n            }\n        }\n\n        return Array.isArray(node.children) ? node.children.reduce(reducer, aggregator) : aggregator;\n    };\n\n    return [ast].reduce(reducer, {\n        definitions: {},\n        footnotes: []\n    });\n}\n\nfunction formExtraPropsForHTMLNodeType() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ast = arguments[1];\n    var definitions = arguments[2];\n\n    switch (ast.type) {\n        case 'footnoteReference':\n            return _extends({}, props, {\n                href: '#' + ast.identifier\n            });\n\n        case 'image':\n            return _extends({}, props, {\n                title: ast.title,\n                alt: ast.alt,\n                src: ast.url\n            });\n\n        case 'imageReference':\n            return _extends({}, props, {\n                title: (0, _lodash2.default)(definitions, '[\\'' + ast.identifier + '\\'].title'),\n                alt: ast.alt,\n                src: (0, _lodash2.default)(definitions, '[\\'' + ast.identifier + '\\'].url')\n            });\n\n        case 'link':\n            return _extends({}, props, {\n                title: ast.title,\n                href: ast.url\n            });\n\n        case 'linkReference':\n            return _extends({}, props, {\n                title: (0, _lodash2.default)(definitions, '[\\'' + ast.identifier + '\\'].title'),\n                href: (0, _lodash2.default)(definitions, '[\\'' + ast.identifier + '\\'].url')\n            });\n\n        case 'list':\n            return _extends({}, props, {\n                start: ast.start\n            });\n\n        case 'tableCell':\n        case 'th':\n            return _extends({}, props, {\n                style: { textAlign: ast.align }\n            });\n    }\n\n    return props;\n}\n\nfunction getHTMLNodeTypeFromASTNodeType(node) {\n    switch (node.type) {\n        case 'break':\n            return 'br';\n\n        case 'delete':\n            return 'del';\n\n        case 'emphasis':\n            return 'em';\n\n        case 'footnoteReference':\n            return 'a';\n\n        case 'heading':\n            return 'h' + node.depth;\n\n        case 'image':\n        case 'imageReference':\n            return 'img';\n\n        case 'inlineCode':\n            return 'code';\n\n        case 'link':\n        case 'linkReference':\n            return 'a';\n\n        case 'list':\n            return node.ordered ? 'ol' : 'ul';\n\n        case 'listItem':\n            return 'li';\n\n        case 'paragraph':\n            return 'p';\n\n        case 'root':\n            return 'div';\n\n        case 'tableHeader':\n            return 'thead';\n\n        case 'tableRow':\n            return 'tr';\n\n        case 'tableCell':\n            return 'td';\n\n        case 'thematicBreak':\n            return 'hr';\n\n        case 'definition':\n        case 'footnoteDefinition':\n        case 'yaml':\n            return null;\n\n        default:\n            return node.type;\n    }\n}\n\nfunction seekCellsAndAlignThemIfNecessary(root, alignmentValues) {\n    var mapper = function mapper(child, index) {\n        if (child.type === 'tableCell') {\n            return _extends({}, child, {\n                align: alignmentValues[index]\n            });\n        } else if (Array.isArray(child.children) && child.children.length) {\n            return child.children.map(mapper);\n        }\n\n        return child;\n    };\n\n    if (Array.isArray(root.children) && root.children.length) {\n        root.children = root.children.map(mapper);\n    }\n\n    return root;\n}\n\nfunction attributeValueToJSXPropValue(key, value) {\n    if (key === 'style') {\n        return value.split(/;\\s?/).reduce(function (styles, kvPair) {\n\n            var key = kvPair.slice(0, kvPair.indexOf(':'));\n\n            // snake-case to camelCase\n            // also handles PascalCasing vendor prefixes\n            var camelCasedKey = key.replace(/(\\-[a-z])/g, function (substr) {\n                return substr[1].toUpperCase();\n            });\n\n            // key.length + 1 to skip over the colon\n            styles[camelCasedKey] = kvPair.slice(key.length + 1).trim();\n\n            return styles;\n        }, {});\n    }\n\n    return value;\n}\n\nfunction coalesceInlineHTML(ast) {\n    function coalescer(node, index, siblings) {\n        if (node.type === 'html') {\n            // ignore block-level elements\n            if (BLOCK_ELEMENT_REGEX.test(node.value)) {\n                return;\n            }\n\n            // ignore self-closing or non-content-bearing elements\n            if (SELF_CLOSING_ELEMENT_REGEX.test(node.value)) {\n                return;\n            }\n\n            // are there more html nodes directly after? if so, fold them into the current node\n            if (index < siblings.length - 1 && siblings[index + 1].type === 'html') {\n                // create a new coalescer context\n                coalescer(siblings[index + 1], index + 1, siblings);\n            }\n\n            var i = index + 1;\n            var end = void 0;\n\n            // where's the end tag?\n            while (end === undefined && i < siblings.length) {\n                if (siblings[i].type !== 'html') {\n                    i += 1;\n                    continue;\n                }\n\n                end = siblings[i];\n            }\n\n            /* all interim elements now become children of the current node, and we splice them (including end tag)\n               out of the sibling array so they will not be iterated-over by forEach */\n\n            node.children = siblings.slice(index + 1, i);\n            siblings.splice(index + 1, i - index);\n\n            var _node$value$match = node.value.match(HTML_EXTRACTOR_REGEX),\n                _node$value$match2 = _toArray(_node$value$match),\n                tag = _node$value$match2[0],\n                attributePairs = _node$value$match2.slice(1);\n\n            // reassign the current node to whatever its tag is\n\n\n            node.type = tag.toLowerCase();\n\n            // make a best-effort conversion to JSX props\n            node.props = attributePairs.reduce(function (props, kvPair) {\n                var valueIndex = kvPair.indexOf('=');\n                var key = kvPair.slice(0, valueIndex === -1 ? undefined : valueIndex);\n\n                // ignoring inline event handlers at this time - they pose enough of a security risk that they're\n                // not worth preserving; there's a reason React calls it \"dangerouslySetInnerHTML\"!\n\n                if (key.indexOf('on') !== 0) {\n                    var value = kvPair.slice(key.length + 1);\n\n                    // strip the outermost single/double quote if it exists\n                    if (value[0] === '\"' || value[0] === '\\'') {\n                        value = value.slice(1, value.length - 1);\n                    }\n\n                    props[ATTRIBUTE_TO_JSX_PROP_MAP[key] || key] = attributeValueToJSXPropValue(key, value) || true;\n                }\n\n                return props;\n            }, {});\n\n            // null out .value or astToJSX() will set it as the child\n            node.value = null;\n        }\n\n        if (node.children) {\n            node.children.forEach(coalescer);\n        }\n    };\n\n    return ast.children.forEach(coalescer);\n}\n\nfunction compiler(markdown) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$overrides = _ref.overrides,\n        overrides = _ref$overrides === undefined ? {} : _ref$overrides;\n\n    var definitions = void 0;\n    var footnotes = void 0;\n\n    function astToJSX(ast, index) {\n        /* `this` is the dictionary of definitions */\n        if (TEXT_AST_TYPES.indexOf(ast.type) !== -1) {\n            return ast.value;\n        }\n\n        var key = index || '0';\n\n        if (ast.type === 'code' && ast.value) {\n            var preProps = _extends({}, (0, _lodash2.default)(overrides, 'pre.props', {}), {\n                key: key\n            });\n\n            var langClassName = 'lang-' + ast.lang;\n            var codeBaseProps = (0, _lodash2.default)(overrides, 'code.props', {});\n            var codeProps = _extends({}, codeBaseProps, {\n                className: codeBaseProps.className ? codeBaseProps.className + ' ' + langClassName : langClassName\n            });\n\n            return _react2.default.createElement((0, _lodash2.default)(overrides, 'pre.component', 'pre'), preProps, _react2.default.createElement((0, _lodash2.default)(overrides, 'code.component', 'code'), codeProps, ast.value));\n        } /* Refers to fenced blocks, need to create a pre:code nested structure */\n\n        if (ast.type === 'list' && ast.loose === false) {\n            ast.children = ast.children.map(function (item) {\n                if (item.children.length === 1 && item.children[0].type === 'paragraph') {\n                    return _extends({}, item, {\n                        children: item.children[0].children\n                    });\n                }\n\n                return item;\n            });\n        } /* tight list, remove the paragraph wrapper just inside the listItem */\n\n        if (ast.type === 'listItem') {\n            if (ast.checked === true || ast.checked === false) {\n                var liProps = _extends({}, (0, _lodash2.default)(overrides, 'li.props', {}), {\n                    key: key\n                });\n\n                var inputProps = _extends({}, (0, _lodash2.default)(overrides, 'input.props', {}), {\n                    key: 'checkbox',\n                    type: 'checkbox',\n                    checked: ast.checked,\n                    readOnly: true\n                });\n\n                return _react2.default.createElement((0, _lodash2.default)(overrides, 'li.component', 'li'), liProps, [_react2.default.createElement((0, _lodash2.default)(overrides, 'input.component', 'input'), inputProps), ast.children.map(astToJSX)]);\n            } /* gfm task list, need to add a checkbox */\n        }\n\n        if (ast.type === 'html') {\n            return _react2.default.createElement('div', { key: key, dangerouslySetInnerHTML: { __html: ast.value } });\n        } /* arbitrary HTML, do the gross thing for now */\n\n        if (ast.type === 'table') {\n            var tbody = { type: 'tbody', children: [] };\n\n            ast.children = ast.children.reduce(function (children, child, index) {\n                if (index === 0) {\n                    /* manually marking the first row as tableHeader since that was removed in remark@4.x; it's important semantically. */\n                    child.type = 'tableHeader';\n                    children.unshift(seekCellsAndAlignThemIfNecessary(child, ast.align));\n                } else if (child.type === 'tableRow') {\n                    tbody.children.push(seekCellsAndAlignThemIfNecessary(child, ast.align));\n                } else if (child.type === 'tableFooter') {\n                    children.push(seekCellsAndAlignThemIfNecessary(child, ast.align));\n                }\n\n                return children;\n            }, [tbody]);\n        } /* React yells if things aren't in the proper structure, so need to\n            delve into the immediate children and wrap tablerow(s) in a tbody */\n\n        if (ast.type === 'tableFooter') {\n            ast.children = [{\n                type: 'tr',\n                children: ast.children\n            }];\n        } /* React yells if things aren't in the proper structure, so need to\n            delve into the immediate children and wrap the cells in a tablerow */\n\n        if (ast.type === 'tableHeader') {\n            ast.children = [{\n                type: 'tr',\n                children: ast.children.map(function (child) {\n                    if (child.type === 'tableCell') {\n                        child.type = 'th';\n                    } /* et voila, a proper table header */\n\n                    return child;\n                })\n            }];\n        } /* React yells if things aren't in the proper structure, so need to\n            delve into the immediate children and wrap the cells in a tablerow */\n\n        if (ast.type === 'footnoteReference') {\n            ast.children = [{ type: 'sup', value: ast.identifier }];\n        } /* place the identifier inside a superscript tag for the link */\n\n        var htmlNodeType = getHTMLNodeTypeFromASTNodeType(ast);\n        if (htmlNodeType === null) {\n            return null;\n        } /* bail out, not convertable to any HTML representation */\n\n        var props = _extends({ key: key }, ast.props);\n\n        var override = overrides[htmlNodeType];\n        if (override) {\n            if (override.component) {\n                htmlNodeType = override.component;\n            } /* sub out the normal html tag name for the JSX / ReactFactory\n                 passed in by the caller */\n\n            if (override.props) {\n                props = _extends({}, override.props, props);\n            } /* apply the prop overrides beneath the minimal set that are necessary\n                 to have the markdown conversion work as expected */\n        }\n\n        /* their props + our props, with any duplicate keys overwritten by us\n           (necessary evil, file an issue if something comes up that needs\n           extra attention, only props specified in `formExtraPropsForHTMLNodeType`\n           will be overwritten on a key collision) */\n        var finalProps = formExtraPropsForHTMLNodeType(props, ast, definitions);\n\n        if (ast.children && ast.children.length === 1) {\n            if (TEXT_AST_TYPES.indexOf(ast.children[0].type) !== -1) {\n                ast.children = ast.children[0].value;\n            }\n        } /* solitary text children don't need full parsing or React will add a wrapper */\n\n        var children = Array.isArray(ast.children) ? ast.children.map(astToJSX) : ast.children;\n\n        return _react2.default.createElement(htmlNodeType, finalProps, ast.value || children);\n    }\n\n    if (typeof markdown !== 'string') {\n        throw new Error('markdown-to-jsx: the first argument must be\\n                         a string');\n    }\n\n    if (getType.call(overrides) !== '[object Object]') {\n        throw new Error('markdown-to-jsx: options.overrides (second argument property) must be\\n                         undefined or an object literal with shape:\\n                         {\\n                            htmltagname: {\\n                                component: string|ReactComponent(optional),\\n                                props: object(optional)\\n                            }\\n                         }');\n    }\n\n    var remarkAST = (0, _unified2.default)().data('settings', {\n        footnotes: true,\n        gfm: true,\n        position: false\n    }).use(_remarkParse2.default).parse(markdown);\n\n    var extracted = extractDefinitionsFromASTTree(remarkAST, astToJSX);\n\n    definitions = extracted.definitions;\n    footnotes = extracted.footnotes;\n\n    coalesceInlineHTML(remarkAST);\n\n    var jsx = astToJSX(remarkAST);\n\n    // discard the root <div> node if there is only one valid initial child\n    // generally this is a paragraph\n    if (jsx.props.children.length === 1) {\n        jsx = jsx.props.children[0];\n    }\n\n    if (footnotes.length) {\n        jsx.props.children.push(_react2.default.createElement(\n            'footer',\n            { key: 'footnotes' },\n            footnotes\n        ));\n    }\n\n    return jsx;\n};\n\n/**\n * A simple HOC for easy React use. Feed the markdown content as a direct child\n * and the rest is taken care of automatically.\n *\n * @param  {String}   options.children   must be a string\n * @param  {Object}   options.options    markdown-to-jsx options (arg 2 of the compiler)\n *\n * @return {ReactElement} the compiled JSX\n */\nvar Component = function Component(_ref2) {\n    var children = _ref2.children,\n        options = _ref2.options,\n        props = _objectWithoutProperties(_ref2, ['children', 'options']);\n\n    return compiler(children, options);\n};\n\nComponent.propTypes = {\n    children: _propTypes2.default.string.isRequired,\n    options: _propTypes2.default.object\n};\n\nexports.default = Component;\n"]},"metadata":{},"sourceType":"script"}