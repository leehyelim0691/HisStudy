{"ast":null,"code":"var _jsxFileName = \"/Users/hyerm2/Desktop/2021SWFestival/HisStudy/src/Bbs.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// import withRoot from './withRoot';\n// // --- Post bootstrap -----\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import clsx from 'clsx';\n// import { lighten, makeStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TablePagination from '@material-ui/core/TablePagination';\n// import TableRow from '@material-ui/core/TableRow';\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import Paper from '@material-ui/core/Paper';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import IconButton from '@material-ui/core/IconButton';\n// import Tooltip from '@material-ui/core/Tooltip';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Switch from '@material-ui/core/Switch';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import FilterListIcon from '@material-ui/icons/FilterList';\n// import Link from '@material-ui/core/Link';\n// import AddBoxIcon from '@material-ui/icons/AddBox';\n// import AppFooter from './views/AppFooter';\n// import AppAppBar from './views/AppAppBar';\n// import Button from '@material-ui/core/Button';\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n// const rows = [\n//   createData('Cupcake', '이동은', 3.7, 4),\n//   createData('Donut', '이혜림', 25.0, 4),\n//   createData('Eclair', '강하림', 16.0, 6),\n//   createData('Frozen yoghurt', '박성희', 6.0, 4),\n//   createData('Gingerbread', '이효주', 16.0, 3),\n//   createData('Honeycomb', '박지후', 3.2, 6),\n//   createData('Ice cream sandwich', '양태균', 9.0, 4),\n//   createData('Jelly Bean', '송하영', 0.0, 0),\n//   createData('KitKat', 'bryan', 26.0, 7),\n//   createData('Lollipop', '이주영', 0.2, 0),\n//   createData('Marshmallow', '남종운', 0, 2),\n//   createData('Nougat', '박세빈', 19.0, 37),\n//   createData('Oreo', '최지훈', 18.0, 4),\n// ];\n// function descendingComparator(a, b, orderBy) {\n//   if (b[orderBy] < a[orderBy]) {\n//     return -1;\n//   }\n//   if (b[orderBy] > a[orderBy]) {\n//     return 1;\n//   }\n//   return 0;\n// }\n// function getComparator(order, orderBy) {\n//   return order === 'desc'\n//     ? (a, b) => descendingComparator(a, b, orderBy)\n//     : (a, b) => -descendingComparator(a, b, orderBy);\n// }\n// function stableSort(array, comparator) {\n//   const stabilizedThis = array.map((el, index) => [el, index]);\n//   stabilizedThis.sort((a, b) => {\n//     const order = comparator(a[0], b[0]);\n//     if (order !== 0) return order;\n//     return a[1] - b[1];\n//   });\n//   return stabilizedThis.map((el) => el[0]);\n// }\n// const headCells = [\n//   { id: 'name', numeric: false, disablePadding: true, label: '제목' },\n//   { id: 'calories', numeric: true, disablePadding: false, label: '게시자' },\n//   { id: 'fat', numeric: true, disablePadding: false, label: '날짜' },\n//   { id: 'protein', numeric: true, disablePadding: false, label: '조회수' },\n// ];\n// function EnhancedTableHead(props) {\n//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n//   const createSortHandler = (property) => (event) => {\n//     onRequestSort(event, property);\n//   };\n//   return (\n//     <TableHead>\n//       <TableRow>\n//         <TableCell padding=\"checkbox\">\n//           <Checkbox\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\n//             checked={rowCount > 0 && numSelected === rowCount}\n//             onChange={onSelectAllClick}\n//             inputProps={{ 'aria-label': 'select all desserts' }}\n//           />\n//         </TableCell>\n//         {headCells.map((headCell) => (\n//           <TableCell\n//             key={headCell.id}\n//             align={headCell.numeric ? 'right' : 'left'}\n//             padding={headCell.disablePadding ? 'none' : 'normal'}\n//             sortDirection={orderBy === headCell.id ? order : false}\n//           >\n//             <TableSortLabel\n//               active={orderBy === headCell.id}\n//               direction={orderBy === headCell.id ? order : 'asc'}\n//               onClick={createSortHandler(headCell.id)}\n//             >\n//               {headCell.label}\n//               {orderBy === headCell.id ? (\n//                 <span className={classes.visuallyHidden}>\n//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n//                 </span>\n//               ) : null}\n//             </TableSortLabel>\n//           </TableCell>\n//         ))}\n//       </TableRow>\n//     </TableHead>\n//   );\n// }\n// EnhancedTableHead.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   numSelected: PropTypes.number.isRequired,\n//   onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n//   orderBy: PropTypes.string.isRequired,\n//   rowCount: PropTypes.number.isRequired,\n// };\n// const useToolbarStyles = makeStyles((theme) => ({\n//   root: {\n//     paddingLeft: theme.spacing(2),\n//     paddingRight: theme.spacing(1),\n//   },\n//   highlight:\n//     theme.palette.type === 'light'\n//       ? {\n//           color: theme.palette.secondary.main,\n//           backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n//         }\n//       : {\n//           color: theme.palette.text.primary,\n//           backgroundColor: theme.palette.secondary.dark,\n//         },\n//   title: {\n//     flex: '1 1 100%',\n//   },\n// }));\n// const EnhancedTableToolbar = (props) => {\n//   const classes = useToolbarStyles();\n//   const { numSelected } = props;\n//   return (\n//     <Toolbar\n//       className={clsx(classes.root, {\n//         [classes.highlight]: numSelected > 0,\n//       })}\n//     >\n//       {numSelected > 0 ? (\n//         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n//           {numSelected} selected\n//         </Typography>\n//       ) : (\n//         <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n//          게시판\n//         </Typography>\n//       )}\n//       {numSelected > 0 ? (\n//         <Tooltip title=\"글 삭제하기\">\n//           <IconButton aria-label=\"delete\">\n//             <DeleteIcon />\n//           </IconButton>\n//         </Tooltip>\n//       ) : (\n//         <Tooltip title=\"새 게시글 쓰기\">\n//            <Button href= '/bbs2'>\n//            <IconButton aria-label=\"filter list\">\n//             <AddBoxIcon />\n//           </IconButton>\n//            </Button>\n//         </Tooltip>\n//       )}\n//     </Toolbar>\n//   );\n// };\n// EnhancedTableToolbar.propTypes = {\n//   numSelected: PropTypes.number.isRequired,\n// };\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//   },\n//   paper: {\n//     width: '100%',\n//     marginBottom: theme.spacing(2),\n//   },\n//   table: {\n//     minWidth: 750,\n//   },\n//   visuallyHidden: {\n//     border: 0,\n//     clip: 'rect(0 0 0 0)',\n//     height: 1,\n//     margin: -1,\n//     overflow: 'hidden',\n//     padding: 0,\n//     position: 'absolute',\n//     top: 20,\n//     width: 1,\n//   },\n// }));\n// function Bbs() {\n//   const classes = useStyles();\n//   const [order, setOrder] = React.useState('asc');\n//   const [orderBy, setOrderBy] = React.useState('calories');\n//   const [selected, setSelected] = React.useState([]);\n//   const [page, setPage] = React.useState(0);\n//   const [dense, setDense] = React.useState(false);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n//   const handleRequestSort = (event, property) => {\n//     const isAsc = orderBy === property && order === 'asc';\n//     setOrder(isAsc ? 'desc' : 'asc');\n//     setOrderBy(property);\n//   };\n//   const handleSelectAllClick = (event) => {\n//     if (event.target.checked) {\n//       const newSelecteds = rows.map((n) => n.name);\n//       setSelected(newSelecteds);\n//       return;\n//     }\n//     setSelected([]);\n//   };\n//   const handleClick = (event, name) => {\n//     const selectedIndex = selected.indexOf(name);\n//     let newSelected = [];\n//     if (selectedIndex === -1) {\n//       newSelected = newSelected.concat(selected, name);\n//     } else if (selectedIndex === 0) {\n//       newSelected = newSelected.concat(selected.slice(1));\n//     } else if (selectedIndex === selected.length - 1) {\n//       newSelected = newSelected.concat(selected.slice(0, -1));\n//     } else if (selectedIndex > 0) {\n//       newSelected = newSelected.concat(\n//         selected.slice(0, selectedIndex),\n//         selected.slice(selectedIndex + 1),\n//       );\n//     }\n//     setSelected(newSelected);\n//   };\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(parseInt(event.target.value, 10));\n//     setPage(0);\n//   };\n//   const handleChangeDense = (event) => {\n//     setDense(event.target.checked);\n//   };\n//   const isSelected = (name) => selected.indexOf(name) !== -1;\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n//   return (\n//     <React.Fragment>\n//       <AppAppBar />\n//     <div className={classes.root}>\n//       <Paper className={classes.paper}>\n//         <EnhancedTableToolbar numSelected={selected.length} />\n//         <TableContainer>\n//           <Table\n//             className={classes.table}\n//             aria-labelledby=\"tableTitle\"\n//             size={dense ? 'small' : 'medium'}\n//             aria-label=\"enhanced table\"\n//           >\n//             <EnhancedTableHead\n//               classes={classes}\n//               numSelected={selected.length}\n//               order={order}\n//               orderBy={orderBy}\n//               onSelectAllClick={handleSelectAllClick}\n//               onRequestSort={handleRequestSort}\n//               rowCount={rows.length}\n//             />\n//             <TableBody>\n//               {stableSort(rows, getComparator(order, orderBy))\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//                 .map((row, index) => {\n//                   const isItemSelected = isSelected(row.name);\n//                   const labelId = `enhanced-table-checkbox-${index}`;\n//                   return (\n//                     <TableRow\n//                       hover\n//                       onClick={(event) => handleClick(event, row.name)}\n//                       role=\"checkbox\"\n//                       aria-checked={isItemSelected}\n//                       tabIndex={-1}\n//                       key={row.name}\n//                       selected={isItemSelected}\n//                     >\n//                       <TableCell padding=\"checkbox\">\n//                         <Checkbox\n//                           checked={isItemSelected}\n//                           inputProps={{ 'aria-labelledby': labelId }}\n//                         />\n//                       </TableCell>\n//                       <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n//                         {row.name}\n//                       </TableCell>\n//                       <TableCell align=\"right\">{row.calories}</TableCell>\n//                       <TableCell align=\"right\">{row.fat}</TableCell>\n//                       <TableCell align=\"right\">{row.carbs}</TableCell>\n//                       <TableCell align=\"right\">{row.protein}</TableCell>\n//                     </TableRow>\n//                   );\n//                 })}\n//               {emptyRows > 0 && (\n//                 <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n//                   <TableCell colSpan={6} />\n//                 </TableRow>\n//               )}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//         <TablePagination\n//           rowsPerPageOptions={[5, 10, 25]}\n//           component=\"div\"\n//           count={rows.length}\n//           rowsPerPage={rowsPerPage}\n//           page={page}\n//           onPageChange={handleChangePage}\n//           onRowsPerPageChange={handleChangeRowsPerPage}\n//         />\n//       </Paper>\n//       <FormControlLabel\n//         control={<Switch checked={dense} onChange={handleChangeDense} />}\n//         label=\"Dense padding\"\n//       />\n//     </div>\n//     <AppFooter />\n//     </React.Fragment>\n//   );\n// }\n// export default withRoot(Bbs);\nimport withRoot from './withRoot'; // --- Post bootstrap -----\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Link from '@material-ui/core/Link';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport AppFooter from './views/AppFooter';\nimport AppAppBar from './views/AppAppBar';\nimport Button from '@material-ui/core/Button';\nimport { CenterFocusStrong } from '@material-ui/icons';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(title, writer, date, view) {\n  return {\n    title,\n    writer,\n    date,\n    view\n  };\n}\n\nconst rows = [createData('이동은', 3.7, 4), createData('이혜림', 25.0, 4), createData('강하림', 16.0, 6), createData('박성희', 6.0, 4), createData('이효주', 16.0, 3), createData('박지후', 3.2, 6), createData('양태균', 9.0, 4), createData('송하영', 0.0, 0), createData('bryan', 26.0, 7), createData('이주영', 0.2, 0), createData('남종운', 0, 2), createData('박세빈', 19.0, 37), createData('최지훈', 18.0, 4)];\nconst customers = [{\n  'id': 1,\n  'image': 'https://placeimg.com/64/64/1',\n  'name': 'handong',\n  'birthday': '991211',\n  'gender': 'man',\n  'job': 'student'\n}, {\n  'id': 2,\n  'image': 'https://placeimg.com/64/64/2',\n  'name': 'global',\n  'birthday': '981031',\n  'gender': 'woman',\n  'job': 'teacher'\n}, {\n  'id': 3,\n  'image': 'https://placeimg.com/64/64/3',\n  'name': 'university',\n  'birthday': '990909',\n  'gender': 'woman',\n  'job': 'sdfsdfs'\n}];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'title',\n  numeric: false,\n  disablePadding: true,\n  label: '제목'\n}, {\n  id: 'writer',\n  numeric: true,\n  disablePadding: false,\n  label: '게시자'\n}, {\n  id: 'date',\n  numeric: true,\n  disablePadding: false,\n  label: '날짜'\n}, {\n  id: 'view',\n  numeric: true,\n  disablePadding: false,\n  label: '조회수'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? 'right' : 'left',\n        padding: headCell.disablePadding ? 'none' : 'normal',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 492,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h4\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"\\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"\\uC0C8 \\uAC8C\\uC2DC\\uAE00 \\uC4F0\\uAE30\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        href: \"/write\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"filter list\",\n          children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 558,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"3YobLOlq21lAjJ1iCLt9G1iGJSo=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '80%',\n    marginLeft: theme.spacing(20),\n    marginBottom: theme.spacing(1)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\n\nfunction Bbs() {\n  _s2();\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('writer');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  state = {\n    customers: \"\"\n  }; // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState({customers : res}))\n  //     .catch(err => console.log(err));\n  // }\n\n  useEffect(() => {\n    this.callApi().then(res => this.setState({\n      customers: res\n    })).catch(err => console.log(err));\n  }, []);\n\n  callApi = async () => {\n    const response = await fetch('/api/customers');\n    const body = response.json();\n    return body;\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n          numSelected: selected.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            \"aria-labelledby\": \"tableTitle\",\n            size: dense ? 'small' : 'medium',\n            \"aria-label\": \"enhanced table\",\n            children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n              classes: classes,\n              numSelected: selected.length,\n              order: order,\n              orderBy: orderBy,\n              onRequestSort: handleRequestSort,\n              rowCount: rows.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                const isItemSelected = isSelected(row.title);\n\n                const preventDefault = event => event.preventDefault();\n\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  onClick: event => handleClick(event, row.title),\n                  role: \"button\",\n                  \"aria-checked\": isItemSelected,\n                  tabIndex: -1,\n                  selected: isItemSelected,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 721,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    padding: \"none\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      href: \"/write\",\n                      children: row.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 724,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: [row.writer, row.date, row.view]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 732,\n                    columnNumber: 23\n                  }, this)]\n                }, row.title, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 712,\n                  columnNumber: 21\n                }, this);\n              }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  height: (dense ? 33 : 53) * emptyRows\n                },\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AppFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 683,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Bbs, \"bUUTfaVni7ZyO7M6O8Xs8F8MFeU=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Bbs;\nexport default _c4 = withRoot(Bbs);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"Bbs\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/hyerm2/Desktop/2021SWFestival/HisStudy/src/Bbs.js"],"names":["withRoot","React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","Link","AddBoxIcon","AppFooter","AppAppBar","Button","CenterFocusStrong","useEffect","createData","title","writer","date","view","rows","customers","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","flex","EnhancedTableToolbar","useStyles","width","paper","marginLeft","marginBottom","table","minWidth","border","clip","height","margin","overflow","padding","position","top","Bbs","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleClick","name","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","isSelected","emptyRows","Math","min","state","callApi","then","res","setState","catch","err","console","log","response","fetch","body","json","row","isItemSelected","preventDefault"],"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","sourcesContent":["// import withRoot from './withRoot';\n// // --- Post bootstrap -----\n// import React from 'react';\n// import PropTypes from 'prop-types';\n// import clsx from 'clsx';\n// import { lighten, makeStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TablePagination from '@material-ui/core/TablePagination';\n// import TableRow from '@material-ui/core/TableRow';\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import Paper from '@material-ui/core/Paper';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import IconButton from '@material-ui/core/IconButton';\n// import Tooltip from '@material-ui/core/Tooltip';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Switch from '@material-ui/core/Switch';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import FilterListIcon from '@material-ui/icons/FilterList';\n// import Link from '@material-ui/core/Link';\n// import AddBoxIcon from '@material-ui/icons/AddBox';\n// import AppFooter from './views/AppFooter';\n// import AppAppBar from './views/AppAppBar';\n// import Button from '@material-ui/core/Button';\n\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const rows = [\n//   createData('Cupcake', '이동은', 3.7, 4),\n//   createData('Donut', '이혜림', 25.0, 4),\n//   createData('Eclair', '강하림', 16.0, 6),\n//   createData('Frozen yoghurt', '박성희', 6.0, 4),\n//   createData('Gingerbread', '이효주', 16.0, 3),\n//   createData('Honeycomb', '박지후', 3.2, 6),\n//   createData('Ice cream sandwich', '양태균', 9.0, 4),\n//   createData('Jelly Bean', '송하영', 0.0, 0),\n//   createData('KitKat', 'bryan', 26.0, 7),\n//   createData('Lollipop', '이주영', 0.2, 0),\n//   createData('Marshmallow', '남종운', 0, 2),\n//   createData('Nougat', '박세빈', 19.0, 37),\n//   createData('Oreo', '최지훈', 18.0, 4),\n// ];\n\n// function descendingComparator(a, b, orderBy) {\n//   if (b[orderBy] < a[orderBy]) {\n//     return -1;\n//   }\n//   if (b[orderBy] > a[orderBy]) {\n//     return 1;\n//   }\n//   return 0;\n// }\n\n// function getComparator(order, orderBy) {\n//   return order === 'desc'\n//     ? (a, b) => descendingComparator(a, b, orderBy)\n//     : (a, b) => -descendingComparator(a, b, orderBy);\n// }\n\n// function stableSort(array, comparator) {\n//   const stabilizedThis = array.map((el, index) => [el, index]);\n//   stabilizedThis.sort((a, b) => {\n//     const order = comparator(a[0], b[0]);\n//     if (order !== 0) return order;\n//     return a[1] - b[1];\n//   });\n//   return stabilizedThis.map((el) => el[0]);\n// }\n\n// const headCells = [\n//   { id: 'name', numeric: false, disablePadding: true, label: '제목' },\n//   { id: 'calories', numeric: true, disablePadding: false, label: '게시자' },\n//   { id: 'fat', numeric: true, disablePadding: false, label: '날짜' },\n//   { id: 'protein', numeric: true, disablePadding: false, label: '조회수' },\n// ];\n\n// function EnhancedTableHead(props) {\n//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n//   const createSortHandler = (property) => (event) => {\n//     onRequestSort(event, property);\n//   };\n\n//   return (\n    \n//     <TableHead>\n//       <TableRow>\n//         <TableCell padding=\"checkbox\">\n//           <Checkbox\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\n//             checked={rowCount > 0 && numSelected === rowCount}\n//             onChange={onSelectAllClick}\n//             inputProps={{ 'aria-label': 'select all desserts' }}\n//           />\n//         </TableCell>\n//         {headCells.map((headCell) => (\n//           <TableCell\n//             key={headCell.id}\n//             align={headCell.numeric ? 'right' : 'left'}\n//             padding={headCell.disablePadding ? 'none' : 'normal'}\n//             sortDirection={orderBy === headCell.id ? order : false}\n//           >\n//             <TableSortLabel\n//               active={orderBy === headCell.id}\n//               direction={orderBy === headCell.id ? order : 'asc'}\n//               onClick={createSortHandler(headCell.id)}\n//             >\n//               {headCell.label}\n//               {orderBy === headCell.id ? (\n//                 <span className={classes.visuallyHidden}>\n//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n//                 </span>\n//               ) : null}\n//             </TableSortLabel>\n//           </TableCell>\n//         ))}\n//       </TableRow>\n//     </TableHead>\n//   );\n// }\n\n// EnhancedTableHead.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   numSelected: PropTypes.number.isRequired,\n//   onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n//   orderBy: PropTypes.string.isRequired,\n//   rowCount: PropTypes.number.isRequired,\n// };\n\n// const useToolbarStyles = makeStyles((theme) => ({\n//   root: {\n//     paddingLeft: theme.spacing(2),\n//     paddingRight: theme.spacing(1),\n//   },\n//   highlight:\n//     theme.palette.type === 'light'\n//       ? {\n//           color: theme.palette.secondary.main,\n//           backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n//         }\n//       : {\n//           color: theme.palette.text.primary,\n//           backgroundColor: theme.palette.secondary.dark,\n//         },\n//   title: {\n//     flex: '1 1 100%',\n//   },\n// }));\n\n// const EnhancedTableToolbar = (props) => {\n//   const classes = useToolbarStyles();\n//   const { numSelected } = props;\n\n//   return (\n//     <Toolbar\n//       className={clsx(classes.root, {\n//         [classes.highlight]: numSelected > 0,\n//       })}\n//     >\n//       {numSelected > 0 ? (\n//         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n//           {numSelected} selected\n//         </Typography>\n//       ) : (\n//         <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n//          게시판\n//         </Typography>\n//       )}\n\n//       {numSelected > 0 ? (\n//         <Tooltip title=\"글 삭제하기\">\n//           <IconButton aria-label=\"delete\">\n//             <DeleteIcon />\n//           </IconButton>\n//         </Tooltip>\n//       ) : (\n//         <Tooltip title=\"새 게시글 쓰기\">\n//            <Button href= '/bbs2'>\n//            <IconButton aria-label=\"filter list\">\n//             <AddBoxIcon />\n//           </IconButton>\n//            </Button>\n           \n           \n//         </Tooltip>\n//       )}\n//     </Toolbar>\n//   );\n// };\n\n// EnhancedTableToolbar.propTypes = {\n//   numSelected: PropTypes.number.isRequired,\n// };\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//   },\n//   paper: {\n//     width: '100%',\n//     marginBottom: theme.spacing(2),\n//   },\n//   table: {\n//     minWidth: 750,\n//   },\n//   visuallyHidden: {\n//     border: 0,\n//     clip: 'rect(0 0 0 0)',\n//     height: 1,\n//     margin: -1,\n//     overflow: 'hidden',\n//     padding: 0,\n//     position: 'absolute',\n//     top: 20,\n//     width: 1,\n//   },\n// }));\n\n// function Bbs() {\n//   const classes = useStyles();\n//   const [order, setOrder] = React.useState('asc');\n//   const [orderBy, setOrderBy] = React.useState('calories');\n//   const [selected, setSelected] = React.useState([]);\n//   const [page, setPage] = React.useState(0);\n//   const [dense, setDense] = React.useState(false);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n//   const handleRequestSort = (event, property) => {\n//     const isAsc = orderBy === property && order === 'asc';\n//     setOrder(isAsc ? 'desc' : 'asc');\n//     setOrderBy(property);\n//   };\n\n//   const handleSelectAllClick = (event) => {\n//     if (event.target.checked) {\n//       const newSelecteds = rows.map((n) => n.name);\n//       setSelected(newSelecteds);\n//       return;\n//     }\n//     setSelected([]);\n//   };\n\n//   const handleClick = (event, name) => {\n//     const selectedIndex = selected.indexOf(name);\n//     let newSelected = [];\n\n//     if (selectedIndex === -1) {\n//       newSelected = newSelected.concat(selected, name);\n//     } else if (selectedIndex === 0) {\n//       newSelected = newSelected.concat(selected.slice(1));\n//     } else if (selectedIndex === selected.length - 1) {\n//       newSelected = newSelected.concat(selected.slice(0, -1));\n//     } else if (selectedIndex > 0) {\n//       newSelected = newSelected.concat(\n//         selected.slice(0, selectedIndex),\n//         selected.slice(selectedIndex + 1),\n//       );\n//     }\n\n//     setSelected(newSelected);\n//   };\n\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(parseInt(event.target.value, 10));\n//     setPage(0);\n//   };\n\n//   const handleChangeDense = (event) => {\n//     setDense(event.target.checked);\n//   };\n\n//   const isSelected = (name) => selected.indexOf(name) !== -1;\n\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n//   return (\n//     <React.Fragment>\n//       <AppAppBar />\n//     <div className={classes.root}>\n//       <Paper className={classes.paper}>\n//         <EnhancedTableToolbar numSelected={selected.length} />\n//         <TableContainer>\n//           <Table\n//             className={classes.table}\n//             aria-labelledby=\"tableTitle\"\n//             size={dense ? 'small' : 'medium'}\n//             aria-label=\"enhanced table\"\n//           >\n//             <EnhancedTableHead\n//               classes={classes}\n//               numSelected={selected.length}\n//               order={order}\n//               orderBy={orderBy}\n//               onSelectAllClick={handleSelectAllClick}\n//               onRequestSort={handleRequestSort}\n//               rowCount={rows.length}\n//             />\n//             <TableBody>\n//               {stableSort(rows, getComparator(order, orderBy))\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//                 .map((row, index) => {\n//                   const isItemSelected = isSelected(row.name);\n//                   const labelId = `enhanced-table-checkbox-${index}`;\n\n//                   return (\n//                     <TableRow\n//                       hover\n//                       onClick={(event) => handleClick(event, row.name)}\n//                       role=\"checkbox\"\n//                       aria-checked={isItemSelected}\n//                       tabIndex={-1}\n//                       key={row.name}\n//                       selected={isItemSelected}\n//                     >\n//                       <TableCell padding=\"checkbox\">\n//                         <Checkbox\n//                           checked={isItemSelected}\n//                           inputProps={{ 'aria-labelledby': labelId }}\n//                         />\n//                       </TableCell>\n//                       <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n//                         {row.name}\n//                       </TableCell>\n//                       <TableCell align=\"right\">{row.calories}</TableCell>\n//                       <TableCell align=\"right\">{row.fat}</TableCell>\n//                       <TableCell align=\"right\">{row.carbs}</TableCell>\n//                       <TableCell align=\"right\">{row.protein}</TableCell>\n//                     </TableRow>\n//                   );\n//                 })}\n//               {emptyRows > 0 && (\n//                 <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n//                   <TableCell colSpan={6} />\n//                 </TableRow>\n//               )}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//         <TablePagination\n//           rowsPerPageOptions={[5, 10, 25]}\n//           component=\"div\"\n//           count={rows.length}\n//           rowsPerPage={rowsPerPage}\n//           page={page}\n//           onPageChange={handleChangePage}\n//           onRowsPerPageChange={handleChangeRowsPerPage}\n//         />\n//       </Paper>\n//       <FormControlLabel\n//         control={<Switch checked={dense} onChange={handleChangeDense} />}\n//         label=\"Dense padding\"\n//       />\n//     </div>\n//     <AppFooter />\n//     </React.Fragment>\n//   );\n// }\n// export default withRoot(Bbs);\n\n\nimport withRoot from './withRoot';\n// --- Post bootstrap -----\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Link from '@material-ui/core/Link';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport AppFooter from './views/AppFooter';\nimport AppAppBar from './views/AppAppBar';\nimport Button from '@material-ui/core/Button';\nimport { CenterFocusStrong } from '@material-ui/icons';\nimport { useEffect } from \"react\";\n\nfunction createData(title, writer, date, view) {\n  return { title, writer, date, view };\n}\n\nconst rows = [\n  createData('이동은', 3.7, 4),\n  createData('이혜림', 25.0, 4),\n  createData('강하림', 16.0, 6),\n  createData('박성희', 6.0, 4),\n  createData('이효주', 16.0, 3),\n  createData('박지후', 3.2, 6),\n  createData('양태균', 9.0, 4),\n  createData( '송하영', 0.0, 0),\n  createData('bryan', 26.0, 7),\n  createData( '이주영', 0.2, 0),\n  createData('남종운', 0, 2),\n  createData('박세빈', 19.0, 37),\n  createData('최지훈', 18.0, 4),\n];\n\nconst customers =[\n  {\n    'id' : 1,\n    'image' : 'https://placeimg.com/64/64/1',\n    'name' : 'handong',\n    'birthday' : '991211',\n    'gender' : 'man',\n    'job' : 'student'\n  },\n  {\n    'id' : 2,\n    'image' : 'https://placeimg.com/64/64/2',\n    'name' : 'global',\n    'birthday' : '981031',\n    'gender' : 'woman',\n    'job' : 'teacher'\n  },\n  {\n    'id' : 3,\n    'image' : 'https://placeimg.com/64/64/3',\n    'name' : 'university',\n    'birthday' : '990909',\n    'gender' : 'woman',\n    'job' : 'sdfsdfs'\n  }\n]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'title', numeric: false, disablePadding: true, label: '제목' },\n  { id: 'writer', numeric: true, disablePadding: false, label: '게시자' },\n  { id: 'date', numeric: true, disablePadding: false, label: '날짜' },\n  { id: 'view', numeric: true, disablePadding: false, label: '조회수' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    \n    <TableHead>\n      <TableRow>\n        <TableCell >\n          \n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      \n        <Typography className={classes.title} variant=\"h4\" id=\"tableTitle\" component=\"div\">\n         게시판\n        </Typography>\n        <Tooltip title=\"새 게시글 쓰기\">\n           <Button href= '/write'>\n           <IconButton aria-label=\"filter list\">\n            <AddBoxIcon />\n          </IconButton>\n           </Button>\n        </Tooltip>\n      \n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '80%',\n    marginLeft: theme.spacing(20),\n    marginBottom: theme.spacing(1),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction Bbs() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('writer');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n \n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n \n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  state = {\n    customers: \"\"\n  }\n\n  // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState({customers : res}))\n  //     .catch(err => console.log(err));\n  // }\n\n  useEffect(() => {\n    this.callApi()\n      .then(res => this.setState({customers : res}))\n      .catch(err => console.log(err));\n  }, []);\n\n  callApi = async () => {\n    const response = await fetch('/api/customers');\n    const body = response.json();\n    return body;\n  }\n\n  return (\n    <React.Fragment>\n    <AppAppBar />\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n      \n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.title);\n                  const preventDefault = (event) => event.preventDefault();\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.title)}\n                      role=\"button\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.title}\n                      selected={isItemSelected}\n                    >\n                      <TableCell >\n                      \n                      </TableCell>\n                      <TableCell component=\"th\"  scope=\"row\" padding=\"none\">\n                      <Link href=\"/write\" >\n                      {row.title}\n                      </Link>\n                      </TableCell>\n                      {/* <TableCell align=\"right\">{row.writer}</TableCell>\n                      <TableCell align=\"right\">{row.date}</TableCell>\n                      <TableCell align=\"right\">{row.view}</TableCell> */}\n                      <TableBody>\n                        {row.writer}\n                        {row.date}\n                        {row.view}\n                      </TableBody>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n    <AppFooter />\n    </React.Fragment>\n  );\n}\nexport default withRoot(Bbs);"]},"metadata":{},"sourceType":"module"}