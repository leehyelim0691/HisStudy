{"ast":null,"code":"var _jsxFileName = \"/Users/hyerm2/Desktop/2021SWFestival/HisStudy/src/MyPassword.js\",\n    _s = $RefreshSig$();\n\nimport withRoot from './withRoot'; // --- Post bootstrap -----\n\nimport React from 'react';\nimport { Field, Form, FormSpy } from 'react-final-form';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AppFooter from './views/AppFooter';\nimport AppAppBar from './views/AppAppBar';\nimport Divider from '@material-ui/core/Divider';\nimport { email, required } from './form/validation';\nimport RFTextField from './form/RFTextField';\nimport FormButton from './form/FormButton';\nimport FormFeedback from './form/FormFeedback';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    minHeight: 400,\n    margin: 100\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title1: {\n    fontSize: 20\n  },\n  title2: {\n    fontSize: 13\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\n\nfunction MyPassword() {\n  _s();\n\n  const classes = useStyles();\n  const [sent, setSent] = React.useState(false);\n\n  const bull = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes.bullet,\n    children: \"\\u2022\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 16\n  }, this);\n\n  const validate = values => {\n    const errors = required(['email', 'password'], values);\n\n    if (!errors.email) {\n      const emailError = email(values.email, values);\n\n      if (emailError) {\n        errors.email = email(values.email, values);\n      }\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = () => {\n    setSent(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title1,\n        color: \"black\",\n        gutterBottom: true,\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title2,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"Update password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        subscription: {\n          submitting: true\n        },\n        validate: validate,\n        children: ({\n          handleSubmit2,\n          submitting\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit2,\n          className: classes.form,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            autoComplete: \"Password\",\n            autoFocus: true,\n            component: RFTextField,\n            disabled: submitting || sent,\n            fullWidth: true,\n            label: \"Password\",\n            margin: \"normal\",\n            name: \"password\",\n            required: true,\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            fullWidth: true,\n            size: \"large\",\n            component: RFTextField,\n            disabled: submitting || sent,\n            required: true,\n            name: \"confirmpassword\",\n            autoComplete: \"Confirm Password\",\n            label: \"Confirm Password\",\n            type: \"Confirm password\",\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormSpy, {\n            subscription: {\n              submitError: true\n            },\n            children: ({\n              submitError\n            }) => submitError ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n              className: classes.feedback,\n              error: true,\n              children: submitError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n            className: classes.button,\n            disabled: submitting || sent,\n            size: \"large\",\n            fullWidth: true,\n            children: submitting || sent ? 'In progressâ€¦' : 'UPDATE'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        children: \"Learn More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyPassword, \"ledDAkqJLnFon8DLuliFHeSoD6A=\", false, function () {\n  return [useStyles];\n});\n\n_c = MyPassword;\nexport default _c2 = withRoot(MyPassword);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyPassword\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/hyerm2/Desktop/2021SWFestival/HisStudy/src/MyPassword.js"],"names":["withRoot","React","Field","Form","FormSpy","Link","makeStyles","Card","CardActions","CardContent","Button","Typography","AppFooter","AppAppBar","Divider","email","required","RFTextField","FormButton","FormFeedback","useStyles","theme","root","minWidth","minHeight","margin","bullet","display","transform","title1","fontSize","title2","pos","marginBottom","MyPassword","classes","sent","setSent","useState","bull","validate","values","errors","emailError","handleSubmit","submitting","handleSubmit2","form","submitError","feedback","button"],"mappings":"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","sourcesContent":["import withRoot from './withRoot';\n// --- Post bootstrap -----\nimport React from 'react';\nimport { Field, Form, FormSpy } from 'react-final-form';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AppFooter from './views/AppFooter';\nimport AppAppBar from './views/AppAppBar';\nimport Divider from '@material-ui/core/Divider';\nimport { email, required } from './form/validation';\nimport RFTextField from './form/RFTextField';\nimport FormButton from './form/FormButton';\nimport FormFeedback from './form/FormFeedback';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 275,\n        minHeight:400,\n        margin : 100,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title1: {\n        fontSize: 20,\n    },\n    title2: {\n        fontSize: 13,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n}));\n\n\nfunction MyPassword() {\n  const classes = useStyles();\n  const [sent, setSent] = React.useState(false);\n  const bull = <span className={classes.bullet}>â€¢</span>;\n\n  const validate = (values) => {\n    const errors = required(['email', 'password'], values);\n\n    if (!errors.email) {\n      const emailError = email(values.email, values);\n      if (emailError) {\n        errors.email = email(values.email, values);\n      }\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = () => {\n    setSent(true);\n  };\n\n  return ( \n        <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n            <Typography className={classes.title1} color=\"black\" gutterBottom>\n                Password\n            </Typography>\n            <Typography className={classes.title2} color=\"textSecondary\" gutterBottom>\n                Update password\n            </Typography>\n            <Divider variant=\"middle\" />\n\n            <Form onSubmit={handleSubmit} subscription={{ submitting: true }} validate={validate}>\n          {({ handleSubmit2, submitting }) => (\n            <form onSubmit={handleSubmit2} className={classes.form} noValidate>\n              <Field\n                autoComplete=\"Password\"\n                autoFocus\n                component={RFTextField}\n                disabled={submitting || sent}\n                fullWidth\n                label=\"Password\"\n                margin=\"normal\"\n                name=\"password\"\n                required\n                size=\"large\"\n              />\n              <Field\n                fullWidth\n                size=\"large\"\n                component={RFTextField}\n                disabled={submitting || sent}\n                required\n                name=\"confirmpassword\"\n                autoComplete=\"Confirm Password\"\n                label=\"Confirm Password\"\n                type=\"Confirm password\"\n                margin=\"normal\"\n              />\n              <FormSpy subscription={{ submitError: true }}>\n                {({ submitError }) =>\n                  submitError ? (\n                    <FormFeedback className={classes.feedback} error>\n                      {submitError}\n                    </FormFeedback>\n                  ) : null\n                }\n              </FormSpy>\n              <FormButton\n                className={classes.button}\n                disabled={submitting || sent}\n                size=\"large\"\n                fullWidth\n              >\n                {submitting || sent ? 'In progressâ€¦' : 'UPDATE'}\n              </FormButton>\n            </form>\n          )}\n        </Form>\n        </CardContent>\n        <CardActions>\n            <Button size=\"small\">Learn More</Button>\n        </CardActions>\n        </Card> \n  );\n}\n\nexport default withRoot(MyPassword);"]},"metadata":{},"sourceType":"module"}