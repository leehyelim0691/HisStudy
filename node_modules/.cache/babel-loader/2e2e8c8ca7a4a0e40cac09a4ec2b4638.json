{"ast":null,"code":"/**\n * @author Titus Wormer\n * @copyright 2015 Titus Wormer\n * @license MIT\n * @module remark:parse:tokenize:break\n * @fileoverview Tokenise a break.\n */\n'use strict';\n\nvar locate = require('../locate/break');\n\nmodule.exports = hardBreak;\nhardBreak.locator = locate;\nvar MIN_BREAK_LENGTH = 2;\n/* Tokenise a break. */\n\nfunction hardBreak(eat, value, silent) {\n  var self = this;\n  var breaks = self.options.breaks;\n  var length = value.length;\n  var index = -1;\n  var queue = '';\n  var character;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === '\\n') {\n      if (!breaks && index < MIN_BREAK_LENGTH) {\n        return;\n      }\n      /* istanbul ignore if - never used (yet) */\n\n\n      if (silent) {\n        return true;\n      }\n\n      queue += character;\n      return eat(queue)({\n        type: 'break'\n      });\n    }\n\n    if (character !== ' ') {\n      return;\n    }\n\n    queue += character;\n  }\n}","map":{"version":3,"sources":["/Users/hyerm2/Desktop/2021SWFestival/HisStudy/node_modules/remark-parse/lib/tokenize/break.js"],"names":["locate","require","module","exports","hardBreak","locator","MIN_BREAK_LENGTH","eat","value","silent","self","breaks","options","length","index","queue","character","charAt","type"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AACAA,SAAS,CAACC,OAAV,GAAoBL,MAApB;AAEA,IAAIM,gBAAgB,GAAG,CAAvB;AAEA;;AACA,SAASF,SAAT,CAAmBG,GAAnB,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,MAAM,GAAGD,IAAI,CAACE,OAAL,CAAaD,MAA1B;AACA,MAAIE,MAAM,GAAGL,KAAK,CAACK,MAAnB;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAJ;;AAEA,SAAO,EAAEF,KAAF,GAAUD,MAAjB,EAAyB;AACvBG,IAAAA,SAAS,GAAGR,KAAK,CAACS,MAAN,CAAaH,KAAb,CAAZ;;AAEA,QAAIE,SAAS,KAAK,IAAlB,EAAwB;AACtB,UAAI,CAACL,MAAD,IAAWG,KAAK,GAAGR,gBAAvB,EAAyC;AACvC;AACD;AAED;;;AACA,UAAIG,MAAJ,EAAY;AACV,eAAO,IAAP;AACD;;AAEDM,MAAAA,KAAK,IAAIC,SAAT;AAEA,aAAOT,GAAG,CAACQ,KAAD,CAAH,CAAW;AAACG,QAAAA,IAAI,EAAE;AAAP,OAAX,CAAP;AACD;;AAED,QAAIF,SAAS,KAAK,GAAlB,EAAuB;AACrB;AACD;;AAEDD,IAAAA,KAAK,IAAIC,SAAT;AACD;AACF","sourcesContent":["/**\n * @author Titus Wormer\n * @copyright 2015 Titus Wormer\n * @license MIT\n * @module remark:parse:tokenize:break\n * @fileoverview Tokenise a break.\n */\n\n'use strict';\n\nvar locate = require('../locate/break');\n\nmodule.exports = hardBreak;\nhardBreak.locator = locate;\n\nvar MIN_BREAK_LENGTH = 2;\n\n/* Tokenise a break. */\nfunction hardBreak(eat, value, silent) {\n  var self = this;\n  var breaks = self.options.breaks;\n  var length = value.length;\n  var index = -1;\n  var queue = '';\n  var character;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === '\\n') {\n      if (!breaks && index < MIN_BREAK_LENGTH) {\n        return;\n      }\n\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true;\n      }\n\n      queue += character;\n\n      return eat(queue)({type: 'break'});\n    }\n\n    if (character !== ' ') {\n      return;\n    }\n\n    queue += character;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}