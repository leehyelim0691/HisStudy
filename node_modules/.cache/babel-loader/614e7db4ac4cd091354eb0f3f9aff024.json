{"ast":null,"code":"/**\n * @author Titus Wormer\n * @copyright 2015 Titus Wormer\n * @license MIT\n * @module remark:parse\n * @fileoverview Markdown parser.\n */\n'use strict';\n\nvar xtend = require('xtend');\n\nvar escapes = require('markdown-escapes');\n\nvar defaults = require('./defaults');\n\nmodule.exports = setOptions;\n/* Set options. */\n\nfunction setOptions(options) {\n  var self = this;\n  var current = self.options;\n  var key;\n  var value;\n\n  if (options == null) {\n    options = {};\n  } else if (typeof options === 'object') {\n    options = xtend(options);\n  } else {\n    throw new Error('Invalid value `' + options + '` ' + 'for setting `options`');\n  }\n\n  for (key in defaults) {\n    value = options[key];\n\n    if (value == null) {\n      value = current[key];\n    }\n\n    if (key !== 'blocks' && typeof value !== 'boolean' || key === 'blocks' && typeof value !== 'object') {\n      throw new Error('Invalid value `' + value + '` ' + 'for setting `options.' + key + '`');\n    }\n\n    options[key] = value;\n  }\n\n  self.options = options;\n  self.escape = escapes(options);\n  return self;\n}","map":{"version":3,"sources":["/Users/hyerm2/Desktop/2021SWFestival/HisStudy/node_modules/remark-parse/lib/set-options.js"],"names":["xtend","require","escapes","defaults","module","exports","setOptions","options","self","current","key","value","Error","escape"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAArB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AAEA;;AACA,SAASA,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,OAAO,GAAGD,IAAI,CAACD,OAAnB;AACA,MAAIG,GAAJ;AACA,MAAIC,KAAJ;;AAEA,MAAIJ,OAAO,IAAI,IAAf,EAAqB;AACnBA,IAAAA,OAAO,GAAG,EAAV;AACD,GAFD,MAEO,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AACtCA,IAAAA,OAAO,GAAGP,KAAK,CAACO,OAAD,CAAf;AACD,GAFM,MAEA;AACL,UAAM,IAAIK,KAAJ,CACJ,oBAAoBL,OAApB,GAA8B,IAA9B,GACA,uBAFI,CAAN;AAID;;AAED,OAAKG,GAAL,IAAYP,QAAZ,EAAsB;AACpBQ,IAAAA,KAAK,GAAGJ,OAAO,CAACG,GAAD,CAAf;;AAEA,QAAIC,KAAK,IAAI,IAAb,EAAmB;AACjBA,MAAAA,KAAK,GAAGF,OAAO,CAACC,GAAD,CAAf;AACD;;AAED,QACGA,GAAG,KAAK,QAAR,IAAoB,OAAOC,KAAP,KAAiB,SAAtC,IACCD,GAAG,KAAK,QAAR,IAAoB,OAAOC,KAAP,KAAiB,QAFxC,EAGE;AACA,YAAM,IAAIC,KAAJ,CACJ,oBAAoBD,KAApB,GAA4B,IAA5B,GACA,uBADA,GAC0BD,GAD1B,GACgC,GAF5B,CAAN;AAID;;AAEDH,IAAAA,OAAO,CAACG,GAAD,CAAP,GAAeC,KAAf;AACD;;AAEDH,EAAAA,IAAI,CAACD,OAAL,GAAeA,OAAf;AACAC,EAAAA,IAAI,CAACK,MAAL,GAAcX,OAAO,CAACK,OAAD,CAArB;AAEA,SAAOC,IAAP;AACD","sourcesContent":["/**\n * @author Titus Wormer\n * @copyright 2015 Titus Wormer\n * @license MIT\n * @module remark:parse\n * @fileoverview Markdown parser.\n */\n\n'use strict';\n\nvar xtend = require('xtend');\nvar escapes = require('markdown-escapes');\nvar defaults = require('./defaults');\n\nmodule.exports = setOptions;\n\n/* Set options. */\nfunction setOptions(options) {\n  var self = this;\n  var current = self.options;\n  var key;\n  var value;\n\n  if (options == null) {\n    options = {};\n  } else if (typeof options === 'object') {\n    options = xtend(options);\n  } else {\n    throw new Error(\n      'Invalid value `' + options + '` ' +\n      'for setting `options`'\n    );\n  }\n\n  for (key in defaults) {\n    value = options[key];\n\n    if (value == null) {\n      value = current[key];\n    }\n\n    if (\n      (key !== 'blocks' && typeof value !== 'boolean') ||\n      (key === 'blocks' && typeof value !== 'object')\n    ) {\n      throw new Error(\n        'Invalid value `' + value + '` ' +\n        'for setting `options.' + key + '`'\n      );\n    }\n\n    options[key] = value;\n  }\n\n  self.options = options;\n  self.escape = escapes(options);\n\n  return self;\n}\n"]},"metadata":{},"sourceType":"script"}