{"ast":null,"code":"var _jsxFileName = \"/Users/hyerm2/Desktop/2021SWFestival/HisStudy/src/form/RFTextField.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '../components/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RFTextField(props) {\n  const {\n    autoComplete,\n    input,\n    InputProps,\n    meta: {\n      touched,\n      error,\n      submitError\n    },\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    error: Boolean(touched && (error || submitError)),\n    ...input,\n    ...other,\n    InputProps: {\n      inputProps: {\n        autoComplete\n      },\n      ...InputProps\n    },\n    helperText: touched ? error || submitError : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RFTextField;\nRFTextField.propTypes = {\n  autoComplete: PropTypes.string,\n  input: PropTypes.object.isRequired,\n  InputProps: PropTypes.object,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    touched: PropTypes.bool.isRequired\n  }).isRequired\n};\nexport default RFTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"RFTextField\");","map":{"version":3,"sources":["/Users/hyerm2/Desktop/2021SWFestival/HisStudy/src/form/RFTextField.js"],"names":["React","PropTypes","TextField","RFTextField","props","autoComplete","input","InputProps","meta","touched","error","submitError","other","Boolean","inputProps","propTypes","string","object","isRequired","shape","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAJF;AAKJ,OAAGC;AALC,MAMFR,KANJ;AAQA,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAES,OAAO,CAACJ,OAAO,KAAKC,KAAK,IAAIC,WAAd,CAAR,CADhB;AAAA,OAEML,KAFN;AAAA,OAGMM,KAHN;AAIE,IAAA,UAAU,EAAE;AACVE,MAAAA,UAAU,EAAE;AACVT,QAAAA;AADU,OADF;AAIV,SAAGE;AAJO,KAJd;AAUE,IAAA,UAAU,EAAEE,OAAO,GAAGC,KAAK,IAAIC,WAAZ,GAA0B;AAV/C;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAvBQR,W;AAyBTA,WAAW,CAACY,SAAZ,GAAwB;AACtBV,EAAAA,YAAY,EAAEJ,SAAS,CAACe,MADF;AAEtBV,EAAAA,KAAK,EAAEL,SAAS,CAACgB,MAAV,CAAiBC,UAFF;AAGtBX,EAAAA,UAAU,EAAEN,SAAS,CAACgB,MAHA;AAItBT,EAAAA,IAAI,EAAEP,SAAS,CAACkB,KAAV,CAAgB;AACpBT,IAAAA,KAAK,EAAET,SAAS,CAACe,MADG;AAEpBP,IAAAA,OAAO,EAAER,SAAS,CAACmB,IAAV,CAAeF;AAFJ,GAAhB,EAGHA;AAPmB,CAAxB;AAUA,eAAef,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '../components/TextField';\n\nfunction RFTextField(props) {\n  const {\n    autoComplete,\n    input,\n    InputProps,\n    meta: { touched, error, submitError },\n    ...other\n  } = props;\n\n  return (\n    <TextField\n      error={Boolean(touched && (error || submitError))}\n      {...input}\n      {...other}\n      InputProps={{\n        inputProps: {\n          autoComplete,\n        },\n        ...InputProps,\n      }}\n      helperText={touched ? error || submitError : ''}\n    />\n  );\n}\n\nRFTextField.propTypes = {\n  autoComplete: PropTypes.string,\n  input: PropTypes.object.isRequired,\n  InputProps: PropTypes.object,\n  meta: PropTypes.shape({\n    error: PropTypes.string,\n    touched: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default RFTextField;\n"]},"metadata":{},"sourceType":"module"}